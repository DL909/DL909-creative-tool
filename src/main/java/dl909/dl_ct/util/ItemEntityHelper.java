package dl909.dl_ct.util;

import net.minecraft.entity.ItemEntity;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

import java.util.Objects;

@SuppressWarnings("SpellCheckingInspection")
public class ItemEntityHelper {
    public static ItemEntity createItemEntityFromParameterList(World world, BlockPos pos, String[] parameters){
        if(parameters.length!=8){
            return null;
        }
        ItemStack itemStack = ItemEntityHelper.createItemStackFromName(parameters[0],Integer.parseInt(parameters[1]));
        if(itemStack == null){
            return null;
        }
        return ItemEntityHelper.createItemEntityFromParameter(
                world,
                itemStack,
                Double.parseDouble(parameters[2])+pos.getX(),
                Double.parseDouble(parameters[3])+pos.getY(),
                Double.parseDouble(parameters[4])+pos.getZ(),
                Double.parseDouble(parameters[5]),
                Double.parseDouble(parameters[6]),
                Double.parseDouble(parameters[7]));
    }
    public static ItemEntity createItemEntityFromParameter(World world,ItemStack itemStack, double pos_x, double pos_y, double pos_z, double speed_x, double speed_y, double speed_z){
        return new ItemEntity(world,pos_x,pos_y,pos_z,itemStack,speed_x,speed_y,speed_z);
    }
    public static ItemStack createItemStackFromName(String name,int count){
        if(Objects.equals(name, "air")){return new ItemStack(Items.AIR,count);}
        if(Objects.equals(name, "stone")){return new ItemStack(Items.STONE,count);}
        if(Objects.equals(name, "granite")){return new ItemStack(Items.GRANITE,count);}
        if(Objects.equals(name, "polished_granite")){return new ItemStack(Items.POLISHED_GRANITE,count);}
        if(Objects.equals(name, "diorite")){return new ItemStack(Items.DIORITE,count);}
        if(Objects.equals(name, "polished_diorite")){return new ItemStack(Items.POLISHED_DIORITE,count);}
        if(Objects.equals(name, "andesite")){return new ItemStack(Items.ANDESITE,count);}
        if(Objects.equals(name, "polished_andesite")){return new ItemStack(Items.POLISHED_ANDESITE,count);}
        if(Objects.equals(name, "deepslate")){return new ItemStack(Items.DEEPSLATE,count);}
        if(Objects.equals(name, "cobbled_deepslate")){return new ItemStack(Items.COBBLED_DEEPSLATE,count);}
        if(Objects.equals(name, "polished_deepslate")){return new ItemStack(Items.POLISHED_DEEPSLATE,count);}
        if(Objects.equals(name, "calcite")){return new ItemStack(Items.CALCITE,count);}
        if(Objects.equals(name, "tuff")){return new ItemStack(Items.TUFF,count);}
        if(Objects.equals(name, "dripstone_block")){return new ItemStack(Items.DRIPSTONE_BLOCK,count);}
        if(Objects.equals(name, "grass_block")){return new ItemStack(Items.GRASS_BLOCK,count);}
        if(Objects.equals(name, "dirt")){return new ItemStack(Items.DIRT,count);}
        if(Objects.equals(name, "coarse_dirt")){return new ItemStack(Items.COARSE_DIRT,count);}
        if(Objects.equals(name, "podzol")){return new ItemStack(Items.PODZOL,count);}
        if(Objects.equals(name, "rooted_dirt")){return new ItemStack(Items.ROOTED_DIRT,count);}
        if(Objects.equals(name, "mud")){return new ItemStack(Items.MUD,count);}
        if(Objects.equals(name, "crimson_nylium")){return new ItemStack(Items.CRIMSON_NYLIUM,count);}
        if(Objects.equals(name, "warped_nylium")){return new ItemStack(Items.WARPED_NYLIUM,count);}
        if(Objects.equals(name, "cobblestone")){return new ItemStack(Items.COBBLESTONE,count);}
        if(Objects.equals(name, "oak_planks")){return new ItemStack(Items.OAK_PLANKS,count);}
        if(Objects.equals(name, "spruce_planks")){return new ItemStack(Items.SPRUCE_PLANKS,count);}
        if(Objects.equals(name, "birch_planks")){return new ItemStack(Items.BIRCH_PLANKS,count);}
        if(Objects.equals(name, "jungle_planks")){return new ItemStack(Items.JUNGLE_PLANKS,count);}
        if(Objects.equals(name, "acacia_planks")){return new ItemStack(Items.ACACIA_PLANKS,count);}
        if(Objects.equals(name, "cherry_planks")){return new ItemStack(Items.CHERRY_PLANKS,count);}
        if(Objects.equals(name, "dark_oak_planks")){return new ItemStack(Items.DARK_OAK_PLANKS,count);}
        if(Objects.equals(name, "mangrove_planks")){return new ItemStack(Items.MANGROVE_PLANKS,count);}
        if(Objects.equals(name, "bamboo_planks")){return new ItemStack(Items.BAMBOO_PLANKS,count);}
        if(Objects.equals(name, "crimson_planks")){return new ItemStack(Items.CRIMSON_PLANKS,count);}
        if(Objects.equals(name, "warped_planks")){return new ItemStack(Items.WARPED_PLANKS,count);}
        if(Objects.equals(name, "bamboo_mosaic")){return new ItemStack(Items.BAMBOO_MOSAIC,count);}
        if(Objects.equals(name, "oak_sapling")){return new ItemStack(Items.OAK_SAPLING,count);}
        if(Objects.equals(name, "spruce_sapling")){return new ItemStack(Items.SPRUCE_SAPLING,count);}
        if(Objects.equals(name, "birch_sapling")){return new ItemStack(Items.BIRCH_SAPLING,count);}
        if(Objects.equals(name, "jungle_sapling")){return new ItemStack(Items.JUNGLE_SAPLING,count);}
        if(Objects.equals(name, "acacia_sapling")){return new ItemStack(Items.ACACIA_SAPLING,count);}
        if(Objects.equals(name, "cherry_sapling")){return new ItemStack(Items.CHERRY_SAPLING,count);}
        if(Objects.equals(name, "dark_oak_sapling")){return new ItemStack(Items.DARK_OAK_SAPLING,count);}
        if(Objects.equals(name, "mangrove_propagule")){return new ItemStack(Items.MANGROVE_PROPAGULE,count);}
        if(Objects.equals(name, "bedrock")){return new ItemStack(Items.BEDROCK,count);}
        if(Objects.equals(name, "sand")){return new ItemStack(Items.SAND,count);}
        if(Objects.equals(name, "suspicious_sand")){return new ItemStack(Items.SUSPICIOUS_SAND,count);}
        if(Objects.equals(name, "red_sand")){return new ItemStack(Items.RED_SAND,count);}
        if(Objects.equals(name, "gravel")){return new ItemStack(Items.GRAVEL,count);}
        if(Objects.equals(name, "coal_ore")){return new ItemStack(Items.COAL_ORE,count);}
        if(Objects.equals(name, "deepslate_coal_ore")){return new ItemStack(Items.DEEPSLATE_COAL_ORE,count);}
        if(Objects.equals(name, "iron_ore")){return new ItemStack(Items.IRON_ORE,count);}
        if(Objects.equals(name, "deepslate_iron_ore")){return new ItemStack(Items.DEEPSLATE_IRON_ORE,count);}
        if(Objects.equals(name, "copper_ore")){return new ItemStack(Items.COPPER_ORE,count);}
        if(Objects.equals(name, "deepslate_copper_ore")){return new ItemStack(Items.DEEPSLATE_COPPER_ORE,count);}
        if(Objects.equals(name, "gold_ore")){return new ItemStack(Items.GOLD_ORE,count);}
        if(Objects.equals(name, "deepslate_gold_ore")){return new ItemStack(Items.DEEPSLATE_GOLD_ORE,count);}
        if(Objects.equals(name, "redstone_ore")){return new ItemStack(Items.REDSTONE_ORE,count);}
        if(Objects.equals(name, "deepslate_redstone_ore")){return new ItemStack(Items.DEEPSLATE_REDSTONE_ORE,count);}
        if(Objects.equals(name, "emerald_ore")){return new ItemStack(Items.EMERALD_ORE,count);}
        if(Objects.equals(name, "deepslate_emerald_ore")){return new ItemStack(Items.DEEPSLATE_EMERALD_ORE,count);}
        if(Objects.equals(name, "lapis_ore")){return new ItemStack(Items.LAPIS_ORE,count);}
        if(Objects.equals(name, "deepslate_lapis_ore")){return new ItemStack(Items.DEEPSLATE_LAPIS_ORE,count);}
        if(Objects.equals(name, "diamond_ore")){return new ItemStack(Items.DIAMOND_ORE,count);}
        if(Objects.equals(name, "deepslate_diamond_ore")){return new ItemStack(Items.DEEPSLATE_DIAMOND_ORE,count);}
        if(Objects.equals(name, "nether_gold_ore")){return new ItemStack(Items.NETHER_GOLD_ORE,count);}
        if(Objects.equals(name, "nether_quartz_ore")){return new ItemStack(Items.NETHER_QUARTZ_ORE,count);}
        if(Objects.equals(name, "ancient_debris")){return new ItemStack(Items.ANCIENT_DEBRIS,count);}
        if(Objects.equals(name, "coal_block")){return new ItemStack(Items.COAL_BLOCK,count);}
        if(Objects.equals(name, "raw_iron_block")){return new ItemStack(Items.RAW_IRON_BLOCK,count);}
        if(Objects.equals(name, "raw_copper_block")){return new ItemStack(Items.RAW_COPPER_BLOCK,count);}
        if(Objects.equals(name, "raw_gold_block")){return new ItemStack(Items.RAW_GOLD_BLOCK,count);}
        if(Objects.equals(name, "amethyst_block")){return new ItemStack(Items.AMETHYST_BLOCK,count);}
        if(Objects.equals(name, "budding_amethyst")){return new ItemStack(Items.BUDDING_AMETHYST,count);}
        if(Objects.equals(name, "iron_block")){return new ItemStack(Items.IRON_BLOCK,count);}
        if(Objects.equals(name, "copper_block")){return new ItemStack(Items.COPPER_BLOCK,count);}
        if(Objects.equals(name, "gold_block")){return new ItemStack(Items.GOLD_BLOCK,count);}
        if(Objects.equals(name, "diamond_block")){return new ItemStack(Items.DIAMOND_BLOCK,count);}
        if(Objects.equals(name, "netherite_block")){return new ItemStack(Items.NETHERITE_BLOCK,count);}
        if(Objects.equals(name, "exposed_copper")){return new ItemStack(Items.EXPOSED_COPPER,count);}
        if(Objects.equals(name, "weathered_copper")){return new ItemStack(Items.WEATHERED_COPPER,count);}
        if(Objects.equals(name, "oxidized_copper")){return new ItemStack(Items.OXIDIZED_COPPER,count);}
        if(Objects.equals(name, "cut_copper")){return new ItemStack(Items.CUT_COPPER,count);}
        if(Objects.equals(name, "exposed_cut_copper")){return new ItemStack(Items.EXPOSED_CUT_COPPER,count);}
        if(Objects.equals(name, "weathered_cut_copper")){return new ItemStack(Items.WEATHERED_CUT_COPPER,count);}
        if(Objects.equals(name, "oxidized_cut_copper")){return new ItemStack(Items.OXIDIZED_CUT_COPPER,count);}
        if(Objects.equals(name, "cut_copper_stairs")){return new ItemStack(Items.CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "exposed_cut_copper_stairs")){return new ItemStack(Items.EXPOSED_CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "weathered_cut_copper_stairs")){return new ItemStack(Items.WEATHERED_CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "oxidized_cut_copper_stairs")){return new ItemStack(Items.OXIDIZED_CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "cut_copper_slab")){return new ItemStack(Items.CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "exposed_cut_copper_slab")){return new ItemStack(Items.EXPOSED_CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "weathered_cut_copper_slab")){return new ItemStack(Items.WEATHERED_CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "oxidized_cut_copper_slab")){return new ItemStack(Items.OXIDIZED_CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "waxed_copper_block")){return new ItemStack(Items.WAXED_COPPER_BLOCK,count);}
        if(Objects.equals(name, "waxed_exposed_copper")){return new ItemStack(Items.WAXED_EXPOSED_COPPER,count);}
        if(Objects.equals(name, "waxed_weathered_copper")){return new ItemStack(Items.WAXED_WEATHERED_COPPER,count);}
        if(Objects.equals(name, "waxed_oxidized_copper")){return new ItemStack(Items.WAXED_OXIDIZED_COPPER,count);}
        if(Objects.equals(name, "waxed_cut_copper")){return new ItemStack(Items.WAXED_CUT_COPPER,count);}
        if(Objects.equals(name, "waxed_exposed_cut_copper")){return new ItemStack(Items.WAXED_EXPOSED_CUT_COPPER,count);}
        if(Objects.equals(name, "waxed_weathered_cut_copper")){return new ItemStack(Items.WAXED_WEATHERED_CUT_COPPER,count);}
        if(Objects.equals(name, "waxed_oxidized_cut_copper")){return new ItemStack(Items.WAXED_OXIDIZED_CUT_COPPER,count);}
        if(Objects.equals(name, "waxed_cut_copper_stairs")){return new ItemStack(Items.WAXED_CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "waxed_exposed_cut_copper_stairs")){return new ItemStack(Items.WAXED_EXPOSED_CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "waxed_weathered_cut_copper_stairs")){return new ItemStack(Items.WAXED_WEATHERED_CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "waxed_oxidized_cut_copper_stairs")){return new ItemStack(Items.WAXED_OXIDIZED_CUT_COPPER_STAIRS,count);}
        if(Objects.equals(name, "waxed_cut_copper_slab")){return new ItemStack(Items.WAXED_CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "waxed_exposed_cut_copper_slab")){return new ItemStack(Items.WAXED_EXPOSED_CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "waxed_weathered_cut_copper_slab")){return new ItemStack(Items.WAXED_WEATHERED_CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "waxed_oxidized_cut_copper_slab")){return new ItemStack(Items.WAXED_OXIDIZED_CUT_COPPER_SLAB,count);}
        if(Objects.equals(name, "oak_log")){return new ItemStack(Items.OAK_LOG,count);}
        if(Objects.equals(name, "spruce_log")){return new ItemStack(Items.SPRUCE_LOG,count);}
        if(Objects.equals(name, "birch_log")){return new ItemStack(Items.BIRCH_LOG,count);}
        if(Objects.equals(name, "jungle_log")){return new ItemStack(Items.JUNGLE_LOG,count);}
        if(Objects.equals(name, "acacia_log")){return new ItemStack(Items.ACACIA_LOG,count);}
        if(Objects.equals(name, "cherry_log")){return new ItemStack(Items.CHERRY_LOG,count);}
        if(Objects.equals(name, "dark_oak_log")){return new ItemStack(Items.DARK_OAK_LOG,count);}
        if(Objects.equals(name, "mangrove_log")){return new ItemStack(Items.MANGROVE_LOG,count);}
        if(Objects.equals(name, "mangrove_roots")){return new ItemStack(Items.MANGROVE_ROOTS,count);}
        if(Objects.equals(name, "muddy_mangrove_roots")){return new ItemStack(Items.MUDDY_MANGROVE_ROOTS,count);}
        if(Objects.equals(name, "crimson_stem")){return new ItemStack(Items.CRIMSON_STEM,count);}
        if(Objects.equals(name, "warped_stem")){return new ItemStack(Items.WARPED_STEM,count);}
        if(Objects.equals(name, "bamboo_block")){return new ItemStack(Items.BAMBOO_BLOCK,count);}
        if(Objects.equals(name, "stripped_oak_log")){return new ItemStack(Items.STRIPPED_OAK_LOG,count);}
        if(Objects.equals(name, "stripped_spruce_log")){return new ItemStack(Items.STRIPPED_SPRUCE_LOG,count);}
        if(Objects.equals(name, "stripped_birch_log")){return new ItemStack(Items.STRIPPED_BIRCH_LOG,count);}
        if(Objects.equals(name, "stripped_jungle_log")){return new ItemStack(Items.STRIPPED_JUNGLE_LOG,count);}
        if(Objects.equals(name, "stripped_acacia_log")){return new ItemStack(Items.STRIPPED_ACACIA_LOG,count);}
        if(Objects.equals(name, "stripped_cherry_log")){return new ItemStack(Items.STRIPPED_CHERRY_LOG,count);}
        if(Objects.equals(name, "stripped_dark_oak_log")){return new ItemStack(Items.STRIPPED_DARK_OAK_LOG,count);}
        if(Objects.equals(name, "stripped_mangrove_log")){return new ItemStack(Items.STRIPPED_MANGROVE_LOG,count);}
        if(Objects.equals(name, "stripped_crimson_stem")){return new ItemStack(Items.STRIPPED_CRIMSON_STEM,count);}
        if(Objects.equals(name, "stripped_warped_stem")){return new ItemStack(Items.STRIPPED_WARPED_STEM,count);}
        if(Objects.equals(name, "stripped_oak_wood")){return new ItemStack(Items.STRIPPED_OAK_WOOD,count);}
        if(Objects.equals(name, "stripped_spruce_wood")){return new ItemStack(Items.STRIPPED_SPRUCE_WOOD,count);}
        if(Objects.equals(name, "stripped_birch_wood")){return new ItemStack(Items.STRIPPED_BIRCH_WOOD,count);}
        if(Objects.equals(name, "stripped_jungle_wood")){return new ItemStack(Items.STRIPPED_JUNGLE_WOOD,count);}
        if(Objects.equals(name, "stripped_acacia_wood")){return new ItemStack(Items.STRIPPED_ACACIA_WOOD,count);}
        if(Objects.equals(name, "stripped_cherry_wood")){return new ItemStack(Items.STRIPPED_CHERRY_WOOD,count);}
        if(Objects.equals(name, "stripped_dark_oak_wood")){return new ItemStack(Items.STRIPPED_DARK_OAK_WOOD,count);}
        if(Objects.equals(name, "stripped_mangrove_wood")){return new ItemStack(Items.STRIPPED_MANGROVE_WOOD,count);}
        if(Objects.equals(name, "stripped_crimson_hyphae")){return new ItemStack(Items.STRIPPED_CRIMSON_HYPHAE,count);}
        if(Objects.equals(name, "stripped_warped_hyphae")){return new ItemStack(Items.STRIPPED_WARPED_HYPHAE,count);}
        if(Objects.equals(name, "stripped_bamboo_block")){return new ItemStack(Items.STRIPPED_BAMBOO_BLOCK,count);}
        if(Objects.equals(name, "oak_wood")){return new ItemStack(Items.OAK_WOOD,count);}
        if(Objects.equals(name, "spruce_wood")){return new ItemStack(Items.SPRUCE_WOOD,count);}
        if(Objects.equals(name, "birch_wood")){return new ItemStack(Items.BIRCH_WOOD,count);}
        if(Objects.equals(name, "jungle_wood")){return new ItemStack(Items.JUNGLE_WOOD,count);}
        if(Objects.equals(name, "acacia_wood")){return new ItemStack(Items.ACACIA_WOOD,count);}
        if(Objects.equals(name, "cherry_wood")){return new ItemStack(Items.CHERRY_WOOD,count);}
        if(Objects.equals(name, "dark_oak_wood")){return new ItemStack(Items.DARK_OAK_WOOD,count);}
        if(Objects.equals(name, "mangrove_wood")){return new ItemStack(Items.MANGROVE_WOOD,count);}
        if(Objects.equals(name, "crimson_hyphae")){return new ItemStack(Items.CRIMSON_HYPHAE,count);}
        if(Objects.equals(name, "warped_hyphae")){return new ItemStack(Items.WARPED_HYPHAE,count);}
        if(Objects.equals(name, "oak_leaves")){return new ItemStack(Items.OAK_LEAVES,count);}
        if(Objects.equals(name, "spruce_leaves")){return new ItemStack(Items.SPRUCE_LEAVES,count);}
        if(Objects.equals(name, "birch_leaves")){return new ItemStack(Items.BIRCH_LEAVES,count);}
        if(Objects.equals(name, "jungle_leaves")){return new ItemStack(Items.JUNGLE_LEAVES,count);}
        if(Objects.equals(name, "acacia_leaves")){return new ItemStack(Items.ACACIA_LEAVES,count);}
        if(Objects.equals(name, "cherry_leaves")){return new ItemStack(Items.CHERRY_LEAVES,count);}
        if(Objects.equals(name, "dark_oak_leaves")){return new ItemStack(Items.DARK_OAK_LEAVES,count);}
        if(Objects.equals(name, "mangrove_leaves")){return new ItemStack(Items.MANGROVE_LEAVES,count);}
        if(Objects.equals(name, "azalea_leaves")){return new ItemStack(Items.AZALEA_LEAVES,count);}
        if(Objects.equals(name, "flowering_azalea_leaves")){return new ItemStack(Items.FLOWERING_AZALEA_LEAVES,count);}
        if(Objects.equals(name, "sponge")){return new ItemStack(Items.SPONGE,count);}
        if(Objects.equals(name, "wet_sponge")){return new ItemStack(Items.WET_SPONGE,count);}
        if(Objects.equals(name, "glass")){return new ItemStack(Items.GLASS,count);}
        if(Objects.equals(name, "tinted_glass")){return new ItemStack(Items.TINTED_GLASS,count);}
        if(Objects.equals(name, "lapis_block")){return new ItemStack(Items.LAPIS_BLOCK,count);}
        if(Objects.equals(name, "sandstone")){return new ItemStack(Items.SANDSTONE,count);}
        if(Objects.equals(name, "chiseled_sandstone")){return new ItemStack(Items.CHISELED_SANDSTONE,count);}
        if(Objects.equals(name, "cut_sandstone")){return new ItemStack(Items.CUT_SANDSTONE,count);}
        if(Objects.equals(name, "cobweb")){return new ItemStack(Items.COBWEB,count);}
        if(Objects.equals(name, "grass")){return new ItemStack(Items.GRASS,count);}
        if(Objects.equals(name, "fern")){return new ItemStack(Items.FERN,count);}
        if(Objects.equals(name, "azalea")){return new ItemStack(Items.AZALEA,count);}
        if(Objects.equals(name, "flowering_azalea")){return new ItemStack(Items.FLOWERING_AZALEA,count);}
        if(Objects.equals(name, "dead_bush")){return new ItemStack(Items.DEAD_BUSH,count);}
        if(Objects.equals(name, "seagrass")){return new ItemStack(Items.SEAGRASS,count);}
        if(Objects.equals(name, "sea_pickle")){return new ItemStack(Items.SEA_PICKLE,count);}
        if(Objects.equals(name, "white_wool")){return new ItemStack(Items.WHITE_WOOL,count);}
        if(Objects.equals(name, "orange_wool")){return new ItemStack(Items.ORANGE_WOOL,count);}
        if(Objects.equals(name, "magenta_wool")){return new ItemStack(Items.MAGENTA_WOOL,count);}
        if(Objects.equals(name, "light_blue_wool")){return new ItemStack(Items.LIGHT_BLUE_WOOL,count);}
        if(Objects.equals(name, "yellow_wool")){return new ItemStack(Items.YELLOW_WOOL,count);}
        if(Objects.equals(name, "lime_wool")){return new ItemStack(Items.LIME_WOOL,count);}
        if(Objects.equals(name, "pink_wool")){return new ItemStack(Items.PINK_WOOL,count);}
        if(Objects.equals(name, "gray_wool")){return new ItemStack(Items.GRAY_WOOL,count);}
        if(Objects.equals(name, "light_gray_wool")){return new ItemStack(Items.LIGHT_GRAY_WOOL,count);}
        if(Objects.equals(name, "cyan_wool")){return new ItemStack(Items.CYAN_WOOL,count);}
        if(Objects.equals(name, "purple_wool")){return new ItemStack(Items.PURPLE_WOOL,count);}
        if(Objects.equals(name, "blue_wool")){return new ItemStack(Items.BLUE_WOOL,count);}
        if(Objects.equals(name, "brown_wool")){return new ItemStack(Items.BROWN_WOOL,count);}
        if(Objects.equals(name, "green_wool")){return new ItemStack(Items.GREEN_WOOL,count);}
        if(Objects.equals(name, "red_wool")){return new ItemStack(Items.RED_WOOL,count);}
        if(Objects.equals(name, "black_wool")){return new ItemStack(Items.BLACK_WOOL,count);}
        if(Objects.equals(name, "dandelion")){return new ItemStack(Items.DANDELION,count);}
        if(Objects.equals(name, "poppy")){return new ItemStack(Items.POPPY,count);}
        if(Objects.equals(name, "blue_orchid")){return new ItemStack(Items.BLUE_ORCHID,count);}
        if(Objects.equals(name, "allium")){return new ItemStack(Items.ALLIUM,count);}
        if(Objects.equals(name, "azure_bluet")){return new ItemStack(Items.AZURE_BLUET,count);}
        if(Objects.equals(name, "red_tulip")){return new ItemStack(Items.RED_TULIP,count);}
        if(Objects.equals(name, "orange_tulip")){return new ItemStack(Items.ORANGE_TULIP,count);}
        if(Objects.equals(name, "white_tulip")){return new ItemStack(Items.WHITE_TULIP,count);}
        if(Objects.equals(name, "pink_tulip")){return new ItemStack(Items.PINK_TULIP,count);}
        if(Objects.equals(name, "oxeye_daisy")){return new ItemStack(Items.OXEYE_DAISY,count);}
        if(Objects.equals(name, "cornflower")){return new ItemStack(Items.CORNFLOWER,count);}
        if(Objects.equals(name, "lily_of_the_valley")){return new ItemStack(Items.LILY_OF_THE_VALLEY,count);}
        if(Objects.equals(name, "wither_rose")){return new ItemStack(Items.WITHER_ROSE,count);}
        if(Objects.equals(name, "torchflower")){return new ItemStack(Items.TORCHFLOWER,count);}
        if(Objects.equals(name, "spore_blossom")){return new ItemStack(Items.SPORE_BLOSSOM,count);}
        if(Objects.equals(name, "brown_mushroom")){return new ItemStack(Items.BROWN_MUSHROOM,count);}
        if(Objects.equals(name, "red_mushroom")){return new ItemStack(Items.RED_MUSHROOM,count);}
        if(Objects.equals(name, "crimson_fungus")){return new ItemStack(Items.CRIMSON_FUNGUS,count);}
        if(Objects.equals(name, "warped_fungus")){return new ItemStack(Items.WARPED_FUNGUS,count);}
        if(Objects.equals(name, "crimson_roots")){return new ItemStack(Items.CRIMSON_ROOTS,count);}
        if(Objects.equals(name, "warped_roots")){return new ItemStack(Items.WARPED_ROOTS,count);}
        if(Objects.equals(name, "nether_sprouts")){return new ItemStack(Items.NETHER_SPROUTS,count);}
        if(Objects.equals(name, "weeping_vines")){return new ItemStack(Items.WEEPING_VINES,count);}
        if(Objects.equals(name, "twisting_vines")){return new ItemStack(Items.TWISTING_VINES,count);}
        if(Objects.equals(name, "sugar_cane")){return new ItemStack(Items.SUGAR_CANE,count);}
        if(Objects.equals(name, "kelp")){return new ItemStack(Items.KELP,count);}
        if(Objects.equals(name, "moss_carpet")){return new ItemStack(Items.MOSS_CARPET,count);}
        if(Objects.equals(name, "pink_petals")){return new ItemStack(Items.PINK_PETALS,count);}
        if(Objects.equals(name, "moss_block")){return new ItemStack(Items.MOSS_BLOCK,count);}
        if(Objects.equals(name, "hanging_roots")){return new ItemStack(Items.HANGING_ROOTS,count);}
        if(Objects.equals(name, "big_dripleaf")){return new ItemStack(Items.BIG_DRIPLEAF,count);}
        if(Objects.equals(name, "small_dripleaf")){return new ItemStack(Items.SMALL_DRIPLEAF,count);}
        if(Objects.equals(name, "bamboo")){return new ItemStack(Items.BAMBOO,count);}
        if(Objects.equals(name, "oak_slab")){return new ItemStack(Items.OAK_SLAB,count);}
        if(Objects.equals(name, "spruce_slab")){return new ItemStack(Items.SPRUCE_SLAB,count);}
        if(Objects.equals(name, "birch_slab")){return new ItemStack(Items.BIRCH_SLAB,count);}
        if(Objects.equals(name, "jungle_slab")){return new ItemStack(Items.JUNGLE_SLAB,count);}
        if(Objects.equals(name, "acacia_slab")){return new ItemStack(Items.ACACIA_SLAB,count);}
        if(Objects.equals(name, "cherry_slab")){return new ItemStack(Items.CHERRY_SLAB,count);}
        if(Objects.equals(name, "dark_oak_slab")){return new ItemStack(Items.DARK_OAK_SLAB,count);}
        if(Objects.equals(name, "mangrove_slab")){return new ItemStack(Items.MANGROVE_SLAB,count);}
        if(Objects.equals(name, "bamboo_slab")){return new ItemStack(Items.BAMBOO_SLAB,count);}
        if(Objects.equals(name, "bamboo_mosaic_slab")){return new ItemStack(Items.BAMBOO_MOSAIC_SLAB,count);}
        if(Objects.equals(name, "crimson_slab")){return new ItemStack(Items.CRIMSON_SLAB,count);}
        if(Objects.equals(name, "warped_slab")){return new ItemStack(Items.WARPED_SLAB,count);}
        if(Objects.equals(name, "stone_slab")){return new ItemStack(Items.STONE_SLAB,count);}
        if(Objects.equals(name, "smooth_stone_slab")){return new ItemStack(Items.SMOOTH_STONE_SLAB,count);}
        if(Objects.equals(name, "sandstone_slab")){return new ItemStack(Items.SANDSTONE_SLAB,count);}
        if(Objects.equals(name, "cut_sandstone_slab")){return new ItemStack(Items.CUT_SANDSTONE_SLAB,count);}
        if(Objects.equals(name, "petrified_oak_slab")){return new ItemStack(Items.PETRIFIED_OAK_SLAB,count);}
        if(Objects.equals(name, "cobblestone_slab")){return new ItemStack(Items.COBBLESTONE_SLAB,count);}
        if(Objects.equals(name, "brick_slab")){return new ItemStack(Items.BRICK_SLAB,count);}
        if(Objects.equals(name, "stone_brick_slab")){return new ItemStack(Items.STONE_BRICK_SLAB,count);}
        if(Objects.equals(name, "mud_brick_slab")){return new ItemStack(Items.MUD_BRICK_SLAB,count);}
        if(Objects.equals(name, "nether_brick_slab")){return new ItemStack(Items.NETHER_BRICK_SLAB,count);}
        if(Objects.equals(name, "quartz_slab")){return new ItemStack(Items.QUARTZ_SLAB,count);}
        if(Objects.equals(name, "red_sandstone_slab")){return new ItemStack(Items.RED_SANDSTONE_SLAB,count);}
        if(Objects.equals(name, "cut_red_sandstone_slab")){return new ItemStack(Items.CUT_RED_SANDSTONE_SLAB,count);}
        if(Objects.equals(name, "purpur_slab")){return new ItemStack(Items.PURPUR_SLAB,count);}
        if(Objects.equals(name, "prismarine_slab")){return new ItemStack(Items.PRISMARINE_SLAB,count);}
        if(Objects.equals(name, "prismarine_brick_slab")){return new ItemStack(Items.PRISMARINE_BRICK_SLAB,count);}
        if(Objects.equals(name, "dark_prismarine_slab")){return new ItemStack(Items.DARK_PRISMARINE_SLAB,count);}
        if(Objects.equals(name, "smooth_quartz")){return new ItemStack(Items.SMOOTH_QUARTZ,count);}
        if(Objects.equals(name, "smooth_red_sandstone")){return new ItemStack(Items.SMOOTH_RED_SANDSTONE,count);}
        if(Objects.equals(name, "smooth_sandstone")){return new ItemStack(Items.SMOOTH_SANDSTONE,count);}
        if(Objects.equals(name, "smooth_stone")){return new ItemStack(Items.SMOOTH_STONE,count);}
        if(Objects.equals(name, "bricks")){return new ItemStack(Items.BRICKS,count);}
        if(Objects.equals(name, "bookshelf")){return new ItemStack(Items.BOOKSHELF,count);}
        if(Objects.equals(name, "chiseled_bookshelf")){return new ItemStack(Items.CHISELED_BOOKSHELF,count);}
        if(Objects.equals(name, "decorated_pot")){return new ItemStack(Items.DECORATED_POT,count);}
        if(Objects.equals(name, "mossy_cobblestone")){return new ItemStack(Items.MOSSY_COBBLESTONE,count);}
        if(Objects.equals(name, "obsidian")){return new ItemStack(Items.OBSIDIAN,count);}
        if(Objects.equals(name, "torch")){return new ItemStack(Items.TORCH,count);}
        if(Objects.equals(name, "end_rod")){return new ItemStack(Items.END_ROD,count);}
        if(Objects.equals(name, "chorus_plant")){return new ItemStack(Items.CHORUS_PLANT,count);}
        if(Objects.equals(name, "chorus_flower")){return new ItemStack(Items.CHORUS_FLOWER,count);}
        if(Objects.equals(name, "purpur_block")){return new ItemStack(Items.PURPUR_BLOCK,count);}
        if(Objects.equals(name, "purpur_pillar")){return new ItemStack(Items.PURPUR_PILLAR,count);}
        if(Objects.equals(name, "purpur_stairs")){return new ItemStack(Items.PURPUR_STAIRS,count);}
        if(Objects.equals(name, "spawner")){return new ItemStack(Items.SPAWNER,count);}
        if(Objects.equals(name, "chest")){return new ItemStack(Items.CHEST,count);}
        if(Objects.equals(name, "crafting_table")){return new ItemStack(Items.CRAFTING_TABLE,count);}
        if(Objects.equals(name, "farmland")){return new ItemStack(Items.FARMLAND,count);}
        if(Objects.equals(name, "furnace")){return new ItemStack(Items.FURNACE,count);}
        if(Objects.equals(name, "ladder")){return new ItemStack(Items.LADDER,count);}
        if(Objects.equals(name, "cobblestone_stairs")){return new ItemStack(Items.COBBLESTONE_STAIRS,count);}
        if(Objects.equals(name, "snow")){return new ItemStack(Items.SNOW,count);}
        if(Objects.equals(name, "ice")){return new ItemStack(Items.ICE,count);}
        if(Objects.equals(name, "snow_block")){return new ItemStack(Items.SNOW_BLOCK,count);}
        if(Objects.equals(name, "cactus")){return new ItemStack(Items.CACTUS,count);}
        if(Objects.equals(name, "clay")){return new ItemStack(Items.CLAY,count);}
        if(Objects.equals(name, "jukebox")){return new ItemStack(Items.JUKEBOX,count);}
        if(Objects.equals(name, "oak_fence")){return new ItemStack(Items.OAK_FENCE,count);}
        if(Objects.equals(name, "spruce_fence")){return new ItemStack(Items.SPRUCE_FENCE,count);}
        if(Objects.equals(name, "birch_fence")){return new ItemStack(Items.BIRCH_FENCE,count);}
        if(Objects.equals(name, "jungle_fence")){return new ItemStack(Items.JUNGLE_FENCE,count);}
        if(Objects.equals(name, "acacia_fence")){return new ItemStack(Items.ACACIA_FENCE,count);}
        if(Objects.equals(name, "cherry_fence")){return new ItemStack(Items.CHERRY_FENCE,count);}
        if(Objects.equals(name, "dark_oak_fence")){return new ItemStack(Items.DARK_OAK_FENCE,count);}
        if(Objects.equals(name, "mangrove_fence")){return new ItemStack(Items.MANGROVE_FENCE,count);}
        if(Objects.equals(name, "bamboo_fence")){return new ItemStack(Items.BAMBOO_FENCE,count);}
        if(Objects.equals(name, "crimson_fence")){return new ItemStack(Items.CRIMSON_FENCE,count);}
        if(Objects.equals(name, "warped_fence")){return new ItemStack(Items.WARPED_FENCE,count);}
        if(Objects.equals(name, "pumpkin")){return new ItemStack(Items.PUMPKIN,count);}
        if(Objects.equals(name, "carved_pumpkin")){return new ItemStack(Items.CARVED_PUMPKIN,count);}
        if(Objects.equals(name, "jack_o_lantern")){return new ItemStack(Items.JACK_O_LANTERN,count);}
        if(Objects.equals(name, "netherrack")){return new ItemStack(Items.NETHERRACK,count);}
        if(Objects.equals(name, "soul_sand")){return new ItemStack(Items.SOUL_SAND,count);}
        if(Objects.equals(name, "soul_soil")){return new ItemStack(Items.SOUL_SOIL,count);}
        if(Objects.equals(name, "basalt")){return new ItemStack(Items.BASALT,count);}
        if(Objects.equals(name, "polished_basalt")){return new ItemStack(Items.POLISHED_BASALT,count);}
        if(Objects.equals(name, "smooth_basalt")){return new ItemStack(Items.SMOOTH_BASALT,count);}
        if(Objects.equals(name, "soul_torch")){return new ItemStack(Items.SOUL_TORCH,count);}
        if(Objects.equals(name, "glowstone")){return new ItemStack(Items.GLOWSTONE,count);}
        if(Objects.equals(name, "infested_stone")){return new ItemStack(Items.INFESTED_STONE,count);}
        if(Objects.equals(name, "infested_cobblestone")){return new ItemStack(Items.INFESTED_COBBLESTONE,count);}
        if(Objects.equals(name, "infested_stone_bricks")){return new ItemStack(Items.INFESTED_STONE_BRICKS,count);}
        if(Objects.equals(name, "infested_mossy_stone_bricks")){return new ItemStack(Items.INFESTED_MOSSY_STONE_BRICKS,count);}
        if(Objects.equals(name, "infested_cracked_stone_bricks")){return new ItemStack(Items.INFESTED_CRACKED_STONE_BRICKS,count);}
        if(Objects.equals(name, "infested_chiseled_stone_bricks")){return new ItemStack(Items.INFESTED_CHISELED_STONE_BRICKS,count);}
        if(Objects.equals(name, "infested_deepslate")){return new ItemStack(Items.INFESTED_DEEPSLATE,count);}
        if(Objects.equals(name, "stone_bricks")){return new ItemStack(Items.STONE_BRICKS,count);}
        if(Objects.equals(name, "mossy_stone_bricks")){return new ItemStack(Items.MOSSY_STONE_BRICKS,count);}
        if(Objects.equals(name, "cracked_stone_bricks")){return new ItemStack(Items.CRACKED_STONE_BRICKS,count);}
        if(Objects.equals(name, "chiseled_stone_bricks")){return new ItemStack(Items.CHISELED_STONE_BRICKS,count);}
        if(Objects.equals(name, "packed_mud")){return new ItemStack(Items.PACKED_MUD,count);}
        if(Objects.equals(name, "mud_bricks")){return new ItemStack(Items.MUD_BRICKS,count);}
        if(Objects.equals(name, "deepslate_bricks")){return new ItemStack(Items.DEEPSLATE_BRICKS,count);}
        if(Objects.equals(name, "cracked_deepslate_bricks")){return new ItemStack(Items.CRACKED_DEEPSLATE_BRICKS,count);}
        if(Objects.equals(name, "deepslate_tiles")){return new ItemStack(Items.DEEPSLATE_TILES,count);}
        if(Objects.equals(name, "cracked_deepslate_tiles")){return new ItemStack(Items.CRACKED_DEEPSLATE_TILES,count);}
        if(Objects.equals(name, "chiseled_deepslate")){return new ItemStack(Items.CHISELED_DEEPSLATE,count);}
        if(Objects.equals(name, "reinforced_deepslate")){return new ItemStack(Items.REINFORCED_DEEPSLATE,count);}
        if(Objects.equals(name, "brown_mushroom_block")){return new ItemStack(Items.BROWN_MUSHROOM_BLOCK,count);}
        if(Objects.equals(name, "red_mushroom_block")){return new ItemStack(Items.RED_MUSHROOM_BLOCK,count);}
        if(Objects.equals(name, "mushroom_stem")){return new ItemStack(Items.MUSHROOM_STEM,count);}
        if(Objects.equals(name, "iron_bars")){return new ItemStack(Items.IRON_BARS,count);}
        if(Objects.equals(name, "chain")){return new ItemStack(Items.CHAIN,count);}
        if(Objects.equals(name, "glass_pane")){return new ItemStack(Items.GLASS_PANE,count);}
        if(Objects.equals(name, "melon")){return new ItemStack(Items.MELON,count);}
        if(Objects.equals(name, "vine")){return new ItemStack(Items.VINE,count);}
        if(Objects.equals(name, "glow_lichen")){return new ItemStack(Items.GLOW_LICHEN,count);}
        if(Objects.equals(name, "brick_stairs")){return new ItemStack(Items.BRICK_STAIRS,count);}
        if(Objects.equals(name, "stone_brick_stairs")){return new ItemStack(Items.STONE_BRICK_STAIRS,count);}
        if(Objects.equals(name, "mud_brick_stairs")){return new ItemStack(Items.MUD_BRICK_STAIRS,count);}
        if(Objects.equals(name, "mycelium")){return new ItemStack(Items.MYCELIUM,count);}
        if(Objects.equals(name, "lily_pad")){return new ItemStack(Items.LILY_PAD,count);}
        if(Objects.equals(name, "nether_bricks")){return new ItemStack(Items.NETHER_BRICKS,count);}
        if(Objects.equals(name, "cracked_nether_bricks")){return new ItemStack(Items.CRACKED_NETHER_BRICKS,count);}
        if(Objects.equals(name, "chiseled_nether_bricks")){return new ItemStack(Items.CHISELED_NETHER_BRICKS,count);}
        if(Objects.equals(name, "nether_brick_fence")){return new ItemStack(Items.NETHER_BRICK_FENCE,count);}
        if(Objects.equals(name, "nether_brick_stairs")){return new ItemStack(Items.NETHER_BRICK_STAIRS,count);}
        if(Objects.equals(name, "sculk")){return new ItemStack(Items.SCULK,count);}
        if(Objects.equals(name, "sculk_vein")){return new ItemStack(Items.SCULK_VEIN,count);}
        if(Objects.equals(name, "sculk_catalyst")){return new ItemStack(Items.SCULK_CATALYST,count);}
        if(Objects.equals(name, "sculk_shrieker")){return new ItemStack(Items.SCULK_SHRIEKER,count);}
        if(Objects.equals(name, "enchanting_table")){return new ItemStack(Items.ENCHANTING_TABLE,count);}
        if(Objects.equals(name, "end_portal_frame")){return new ItemStack(Items.END_PORTAL_FRAME,count);}
        if(Objects.equals(name, "end_stone")){return new ItemStack(Items.END_STONE,count);}
        if(Objects.equals(name, "end_stone_bricks")){return new ItemStack(Items.END_STONE_BRICKS,count);}
        if(Objects.equals(name, "dragon_egg")){return new ItemStack(Items.DRAGON_EGG,count);}
        if(Objects.equals(name, "sandstone_stairs")){return new ItemStack(Items.SANDSTONE_STAIRS,count);}
        if(Objects.equals(name, "ender_chest")){return new ItemStack(Items.ENDER_CHEST,count);}
        if(Objects.equals(name, "emerald_block")){return new ItemStack(Items.EMERALD_BLOCK,count);}
        if(Objects.equals(name, "oak_stairs")){return new ItemStack(Items.OAK_STAIRS,count);}
        if(Objects.equals(name, "spruce_stairs")){return new ItemStack(Items.SPRUCE_STAIRS,count);}
        if(Objects.equals(name, "birch_stairs")){return new ItemStack(Items.BIRCH_STAIRS,count);}
        if(Objects.equals(name, "jungle_stairs")){return new ItemStack(Items.JUNGLE_STAIRS,count);}
        if(Objects.equals(name, "acacia_stairs")){return new ItemStack(Items.ACACIA_STAIRS,count);}
        if(Objects.equals(name, "cherry_stairs")){return new ItemStack(Items.CHERRY_STAIRS,count);}
        if(Objects.equals(name, "dark_oak_stairs")){return new ItemStack(Items.DARK_OAK_STAIRS,count);}
        if(Objects.equals(name, "mangrove_stairs")){return new ItemStack(Items.MANGROVE_STAIRS,count);}
        if(Objects.equals(name, "bamboo_stairs")){return new ItemStack(Items.BAMBOO_STAIRS,count);}
        if(Objects.equals(name, "bamboo_mosaic_stairs")){return new ItemStack(Items.BAMBOO_MOSAIC_STAIRS,count);}
        if(Objects.equals(name, "crimson_stairs")){return new ItemStack(Items.CRIMSON_STAIRS,count);}
        if(Objects.equals(name, "warped_stairs")){return new ItemStack(Items.WARPED_STAIRS,count);}
        if(Objects.equals(name, "command_block")){return new ItemStack(Items.COMMAND_BLOCK,count);}
        if(Objects.equals(name, "beacon")){return new ItemStack(Items.BEACON,count);}
        if(Objects.equals(name, "cobblestone_wall")){return new ItemStack(Items.COBBLESTONE_WALL,count);}
        if(Objects.equals(name, "mossy_cobblestone_wall")){return new ItemStack(Items.MOSSY_COBBLESTONE_WALL,count);}
        if(Objects.equals(name, "brick_wall")){return new ItemStack(Items.BRICK_WALL,count);}
        if(Objects.equals(name, "prismarine_wall")){return new ItemStack(Items.PRISMARINE_WALL,count);}
        if(Objects.equals(name, "red_sandstone_wall")){return new ItemStack(Items.RED_SANDSTONE_WALL,count);}
        if(Objects.equals(name, "mossy_stone_brick_wall")){return new ItemStack(Items.MOSSY_STONE_BRICK_WALL,count);}
        if(Objects.equals(name, "granite_wall")){return new ItemStack(Items.GRANITE_WALL,count);}
        if(Objects.equals(name, "stone_brick_wall")){return new ItemStack(Items.STONE_BRICK_WALL,count);}
        if(Objects.equals(name, "mud_brick_wall")){return new ItemStack(Items.MUD_BRICK_WALL,count);}
        if(Objects.equals(name, "nether_brick_wall")){return new ItemStack(Items.NETHER_BRICK_WALL,count);}
        if(Objects.equals(name, "andesite_wall")){return new ItemStack(Items.ANDESITE_WALL,count);}
        if(Objects.equals(name, "red_nether_brick_wall")){return new ItemStack(Items.RED_NETHER_BRICK_WALL,count);}
        if(Objects.equals(name, "sandstone_wall")){return new ItemStack(Items.SANDSTONE_WALL,count);}
        if(Objects.equals(name, "end_stone_brick_wall")){return new ItemStack(Items.END_STONE_BRICK_WALL,count);}
        if(Objects.equals(name, "diorite_wall")){return new ItemStack(Items.DIORITE_WALL,count);}
        if(Objects.equals(name, "blackstone_wall")){return new ItemStack(Items.BLACKSTONE_WALL,count);}
        if(Objects.equals(name, "polished_blackstone_wall")){return new ItemStack(Items.POLISHED_BLACKSTONE_WALL,count);}
        if(Objects.equals(name, "polished_blackstone_brick_wall")){return new ItemStack(Items.POLISHED_BLACKSTONE_BRICK_WALL,count);}
        if(Objects.equals(name, "cobbled_deepslate_wall")){return new ItemStack(Items.COBBLED_DEEPSLATE_WALL,count);}
        if(Objects.equals(name, "polished_deepslate_wall")){return new ItemStack(Items.POLISHED_DEEPSLATE_WALL,count);}
        if(Objects.equals(name, "deepslate_brick_wall")){return new ItemStack(Items.DEEPSLATE_BRICK_WALL,count);}
        if(Objects.equals(name, "deepslate_tile_wall")){return new ItemStack(Items.DEEPSLATE_TILE_WALL,count);}
        if(Objects.equals(name, "anvil")){return new ItemStack(Items.ANVIL,count);}
        if(Objects.equals(name, "chipped_anvil")){return new ItemStack(Items.CHIPPED_ANVIL,count);}
        if(Objects.equals(name, "damaged_anvil")){return new ItemStack(Items.DAMAGED_ANVIL,count);}
        if(Objects.equals(name, "chiseled_quartz_block")){return new ItemStack(Items.CHISELED_QUARTZ_BLOCK,count);}
        if(Objects.equals(name, "quartz_block")){return new ItemStack(Items.QUARTZ_BLOCK,count);}
        if(Objects.equals(name, "quartz_bricks")){return new ItemStack(Items.QUARTZ_BRICKS,count);}
        if(Objects.equals(name, "quartz_pillar")){return new ItemStack(Items.QUARTZ_PILLAR,count);}
        if(Objects.equals(name, "quartz_stairs")){return new ItemStack(Items.QUARTZ_STAIRS,count);}
        if(Objects.equals(name, "white_terracotta")){return new ItemStack(Items.WHITE_TERRACOTTA,count);}
        if(Objects.equals(name, "orange_terracotta")){return new ItemStack(Items.ORANGE_TERRACOTTA,count);}
        if(Objects.equals(name, "magenta_terracotta")){return new ItemStack(Items.MAGENTA_TERRACOTTA,count);}
        if(Objects.equals(name, "light_blue_terracotta")){return new ItemStack(Items.LIGHT_BLUE_TERRACOTTA,count);}
        if(Objects.equals(name, "yellow_terracotta")){return new ItemStack(Items.YELLOW_TERRACOTTA,count);}
        if(Objects.equals(name, "lime_terracotta")){return new ItemStack(Items.LIME_TERRACOTTA,count);}
        if(Objects.equals(name, "pink_terracotta")){return new ItemStack(Items.PINK_TERRACOTTA,count);}
        if(Objects.equals(name, "gray_terracotta")){return new ItemStack(Items.GRAY_TERRACOTTA,count);}
        if(Objects.equals(name, "light_gray_terracotta")){return new ItemStack(Items.LIGHT_GRAY_TERRACOTTA,count);}
        if(Objects.equals(name, "cyan_terracotta")){return new ItemStack(Items.CYAN_TERRACOTTA,count);}
        if(Objects.equals(name, "purple_terracotta")){return new ItemStack(Items.PURPLE_TERRACOTTA,count);}
        if(Objects.equals(name, "blue_terracotta")){return new ItemStack(Items.BLUE_TERRACOTTA,count);}
        if(Objects.equals(name, "brown_terracotta")){return new ItemStack(Items.BROWN_TERRACOTTA,count);}
        if(Objects.equals(name, "green_terracotta")){return new ItemStack(Items.GREEN_TERRACOTTA,count);}
        if(Objects.equals(name, "red_terracotta")){return new ItemStack(Items.RED_TERRACOTTA,count);}
        if(Objects.equals(name, "black_terracotta")){return new ItemStack(Items.BLACK_TERRACOTTA,count);}
        if(Objects.equals(name, "barrier")){return new ItemStack(Items.BARRIER,count);}
        if(Objects.equals(name, "light")){return new ItemStack(Items.LIGHT,count);}
        if(Objects.equals(name, "hay_block")){return new ItemStack(Items.HAY_BLOCK,count);}
        if(Objects.equals(name, "white_carpet")){return new ItemStack(Items.WHITE_CARPET,count);}
        if(Objects.equals(name, "orange_carpet")){return new ItemStack(Items.ORANGE_CARPET,count);}
        if(Objects.equals(name, "magenta_carpet")){return new ItemStack(Items.MAGENTA_CARPET,count);}
        if(Objects.equals(name, "light_blue_carpet")){return new ItemStack(Items.LIGHT_BLUE_CARPET,count);}
        if(Objects.equals(name, "yellow_carpet")){return new ItemStack(Items.YELLOW_CARPET,count);}
        if(Objects.equals(name, "lime_carpet")){return new ItemStack(Items.LIME_CARPET,count);}
        if(Objects.equals(name, "pink_carpet")){return new ItemStack(Items.PINK_CARPET,count);}
        if(Objects.equals(name, "gray_carpet")){return new ItemStack(Items.GRAY_CARPET,count);}
        if(Objects.equals(name, "light_gray_carpet")){return new ItemStack(Items.LIGHT_GRAY_CARPET,count);}
        if(Objects.equals(name, "cyan_carpet")){return new ItemStack(Items.CYAN_CARPET,count);}
        if(Objects.equals(name, "purple_carpet")){return new ItemStack(Items.PURPLE_CARPET,count);}
        if(Objects.equals(name, "blue_carpet")){return new ItemStack(Items.BLUE_CARPET,count);}
        if(Objects.equals(name, "brown_carpet")){return new ItemStack(Items.BROWN_CARPET,count);}
        if(Objects.equals(name, "green_carpet")){return new ItemStack(Items.GREEN_CARPET,count);}
        if(Objects.equals(name, "red_carpet")){return new ItemStack(Items.RED_CARPET,count);}
        if(Objects.equals(name, "black_carpet")){return new ItemStack(Items.BLACK_CARPET,count);}
        if(Objects.equals(name, "terracotta")){return new ItemStack(Items.TERRACOTTA,count);}
        if(Objects.equals(name, "packed_ice")){return new ItemStack(Items.PACKED_ICE,count);}
        if(Objects.equals(name, "dirt_path")){return new ItemStack(Items.DIRT_PATH,count);}
        if(Objects.equals(name, "sunflower")){return new ItemStack(Items.SUNFLOWER,count);}
        if(Objects.equals(name, "lilac")){return new ItemStack(Items.LILAC,count);}
        if(Objects.equals(name, "rose_bush")){return new ItemStack(Items.ROSE_BUSH,count);}
        if(Objects.equals(name, "peony")){return new ItemStack(Items.PEONY,count);}
        if(Objects.equals(name, "tall_grass")){return new ItemStack(Items.TALL_GRASS,count);}
        if(Objects.equals(name, "large_fern")){return new ItemStack(Items.LARGE_FERN,count);}
        if(Objects.equals(name, "white_stained_glass")){return new ItemStack(Items.WHITE_STAINED_GLASS,count);}
        if(Objects.equals(name, "orange_stained_glass")){return new ItemStack(Items.ORANGE_STAINED_GLASS,count);}
        if(Objects.equals(name, "magenta_stained_glass")){return new ItemStack(Items.MAGENTA_STAINED_GLASS,count);}
        if(Objects.equals(name, "light_blue_stained_glass")){return new ItemStack(Items.LIGHT_BLUE_STAINED_GLASS,count);}
        if(Objects.equals(name, "yellow_stained_glass")){return new ItemStack(Items.YELLOW_STAINED_GLASS,count);}
        if(Objects.equals(name, "lime_stained_glass")){return new ItemStack(Items.LIME_STAINED_GLASS,count);}
        if(Objects.equals(name, "pink_stained_glass")){return new ItemStack(Items.PINK_STAINED_GLASS,count);}
        if(Objects.equals(name, "gray_stained_glass")){return new ItemStack(Items.GRAY_STAINED_GLASS,count);}
        if(Objects.equals(name, "light_gray_stained_glass")){return new ItemStack(Items.LIGHT_GRAY_STAINED_GLASS,count);}
        if(Objects.equals(name, "cyan_stained_glass")){return new ItemStack(Items.CYAN_STAINED_GLASS,count);}
        if(Objects.equals(name, "purple_stained_glass")){return new ItemStack(Items.PURPLE_STAINED_GLASS,count);}
        if(Objects.equals(name, "blue_stained_glass")){return new ItemStack(Items.BLUE_STAINED_GLASS,count);}
        if(Objects.equals(name, "brown_stained_glass")){return new ItemStack(Items.BROWN_STAINED_GLASS,count);}
        if(Objects.equals(name, "green_stained_glass")){return new ItemStack(Items.GREEN_STAINED_GLASS,count);}
        if(Objects.equals(name, "red_stained_glass")){return new ItemStack(Items.RED_STAINED_GLASS,count);}
        if(Objects.equals(name, "black_stained_glass")){return new ItemStack(Items.BLACK_STAINED_GLASS,count);}
        if(Objects.equals(name, "white_stained_glass_pane")){return new ItemStack(Items.WHITE_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "orange_stained_glass_pane")){return new ItemStack(Items.ORANGE_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "magenta_stained_glass_pane")){return new ItemStack(Items.MAGENTA_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "light_blue_stained_glass_pane")){return new ItemStack(Items.LIGHT_BLUE_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "yellow_stained_glass_pane")){return new ItemStack(Items.YELLOW_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "lime_stained_glass_pane")){return new ItemStack(Items.LIME_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "pink_stained_glass_pane")){return new ItemStack(Items.PINK_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "gray_stained_glass_pane")){return new ItemStack(Items.GRAY_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "light_gray_stained_glass_pane")){return new ItemStack(Items.LIGHT_GRAY_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "cyan_stained_glass_pane")){return new ItemStack(Items.CYAN_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "purple_stained_glass_pane")){return new ItemStack(Items.PURPLE_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "blue_stained_glass_pane")){return new ItemStack(Items.BLUE_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "brown_stained_glass_pane")){return new ItemStack(Items.BROWN_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "green_stained_glass_pane")){return new ItemStack(Items.GREEN_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "red_stained_glass_pane")){return new ItemStack(Items.RED_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "black_stained_glass_pane")){return new ItemStack(Items.BLACK_STAINED_GLASS_PANE,count);}
        if(Objects.equals(name, "prismarine")){return new ItemStack(Items.PRISMARINE,count);}
        if(Objects.equals(name, "prismarine_bricks")){return new ItemStack(Items.PRISMARINE_BRICKS,count);}
        if(Objects.equals(name, "dark_prismarine")){return new ItemStack(Items.DARK_PRISMARINE,count);}
        if(Objects.equals(name, "prismarine_stairs")){return new ItemStack(Items.PRISMARINE_STAIRS,count);}
        if(Objects.equals(name, "prismarine_brick_stairs")){return new ItemStack(Items.PRISMARINE_BRICK_STAIRS,count);}
        if(Objects.equals(name, "dark_prismarine_stairs")){return new ItemStack(Items.DARK_PRISMARINE_STAIRS,count);}
        if(Objects.equals(name, "sea_lantern")){return new ItemStack(Items.SEA_LANTERN,count);}
        if(Objects.equals(name, "red_sandstone")){return new ItemStack(Items.RED_SANDSTONE,count);}
        if(Objects.equals(name, "chiseled_red_sandstone")){return new ItemStack(Items.CHISELED_RED_SANDSTONE,count);}
        if(Objects.equals(name, "cut_red_sandstone")){return new ItemStack(Items.CUT_RED_SANDSTONE,count);}
        if(Objects.equals(name, "red_sandstone_stairs")){return new ItemStack(Items.RED_SANDSTONE_STAIRS,count);}
        if(Objects.equals(name, "repeating_command_block")){return new ItemStack(Items.REPEATING_COMMAND_BLOCK,count);}
        if(Objects.equals(name, "chain_command_block")){return new ItemStack(Items.CHAIN_COMMAND_BLOCK,count);}
        if(Objects.equals(name, "magma_block")){return new ItemStack(Items.MAGMA_BLOCK,count);}
        if(Objects.equals(name, "nether_wart_block")){return new ItemStack(Items.NETHER_WART_BLOCK,count);}
        if(Objects.equals(name, "warped_wart_block")){return new ItemStack(Items.WARPED_WART_BLOCK,count);}
        if(Objects.equals(name, "red_nether_bricks")){return new ItemStack(Items.RED_NETHER_BRICKS,count);}
        if(Objects.equals(name, "bone_block")){return new ItemStack(Items.BONE_BLOCK,count);}
        if(Objects.equals(name, "structure_void")){return new ItemStack(Items.STRUCTURE_VOID,count);}
        if(Objects.equals(name, "shulker_box")){return new ItemStack(Items.SHULKER_BOX,count);}
        if(Objects.equals(name, "white_shulker_box")){return new ItemStack(Items.WHITE_SHULKER_BOX,count);}
        if(Objects.equals(name, "orange_shulker_box")){return new ItemStack(Items.ORANGE_SHULKER_BOX,count);}
        if(Objects.equals(name, "magenta_shulker_box")){return new ItemStack(Items.MAGENTA_SHULKER_BOX,count);}
        if(Objects.equals(name, "light_blue_shulker_box")){return new ItemStack(Items.LIGHT_BLUE_SHULKER_BOX,count);}
        if(Objects.equals(name, "yellow_shulker_box")){return new ItemStack(Items.YELLOW_SHULKER_BOX,count);}
        if(Objects.equals(name, "lime_shulker_box")){return new ItemStack(Items.LIME_SHULKER_BOX,count);}
        if(Objects.equals(name, "pink_shulker_box")){return new ItemStack(Items.PINK_SHULKER_BOX,count);}
        if(Objects.equals(name, "gray_shulker_box")){return new ItemStack(Items.GRAY_SHULKER_BOX,count);}
        if(Objects.equals(name, "light_gray_shulker_box")){return new ItemStack(Items.LIGHT_GRAY_SHULKER_BOX,count);}
        if(Objects.equals(name, "cyan_shulker_box")){return new ItemStack(Items.CYAN_SHULKER_BOX,count);}
        if(Objects.equals(name, "purple_shulker_box")){return new ItemStack(Items.PURPLE_SHULKER_BOX,count);}
        if(Objects.equals(name, "blue_shulker_box")){return new ItemStack(Items.BLUE_SHULKER_BOX,count);}
        if(Objects.equals(name, "brown_shulker_box")){return new ItemStack(Items.BROWN_SHULKER_BOX,count);}
        if(Objects.equals(name, "green_shulker_box")){return new ItemStack(Items.GREEN_SHULKER_BOX,count);}
        if(Objects.equals(name, "red_shulker_box")){return new ItemStack(Items.RED_SHULKER_BOX,count);}
        if(Objects.equals(name, "black_shulker_box")){return new ItemStack(Items.BLACK_SHULKER_BOX,count);}
        if(Objects.equals(name, "white_glazed_terracotta")){return new ItemStack(Items.WHITE_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "orange_glazed_terracotta")){return new ItemStack(Items.ORANGE_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "magenta_glazed_terracotta")){return new ItemStack(Items.MAGENTA_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "light_blue_glazed_terracotta")){return new ItemStack(Items.LIGHT_BLUE_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "yellow_glazed_terracotta")){return new ItemStack(Items.YELLOW_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "lime_glazed_terracotta")){return new ItemStack(Items.LIME_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "pink_glazed_terracotta")){return new ItemStack(Items.PINK_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "gray_glazed_terracotta")){return new ItemStack(Items.GRAY_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "light_gray_glazed_terracotta")){return new ItemStack(Items.LIGHT_GRAY_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "cyan_glazed_terracotta")){return new ItemStack(Items.CYAN_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "purple_glazed_terracotta")){return new ItemStack(Items.PURPLE_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "blue_glazed_terracotta")){return new ItemStack(Items.BLUE_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "brown_glazed_terracotta")){return new ItemStack(Items.BROWN_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "green_glazed_terracotta")){return new ItemStack(Items.GREEN_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "red_glazed_terracotta")){return new ItemStack(Items.RED_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "black_glazed_terracotta")){return new ItemStack(Items.BLACK_GLAZED_TERRACOTTA,count);}
        if(Objects.equals(name, "white_concrete")){return new ItemStack(Items.WHITE_CONCRETE,count);}
        if(Objects.equals(name, "orange_concrete")){return new ItemStack(Items.ORANGE_CONCRETE,count);}
        if(Objects.equals(name, "magenta_concrete")){return new ItemStack(Items.MAGENTA_CONCRETE,count);}
        if(Objects.equals(name, "light_blue_concrete")){return new ItemStack(Items.LIGHT_BLUE_CONCRETE,count);}
        if(Objects.equals(name, "yellow_concrete")){return new ItemStack(Items.YELLOW_CONCRETE,count);}
        if(Objects.equals(name, "lime_concrete")){return new ItemStack(Items.LIME_CONCRETE,count);}
        if(Objects.equals(name, "pink_concrete")){return new ItemStack(Items.PINK_CONCRETE,count);}
        if(Objects.equals(name, "gray_concrete")){return new ItemStack(Items.GRAY_CONCRETE,count);}
        if(Objects.equals(name, "light_gray_concrete")){return new ItemStack(Items.LIGHT_GRAY_CONCRETE,count);}
        if(Objects.equals(name, "cyan_concrete")){return new ItemStack(Items.CYAN_CONCRETE,count);}
        if(Objects.equals(name, "purple_concrete")){return new ItemStack(Items.PURPLE_CONCRETE,count);}
        if(Objects.equals(name, "blue_concrete")){return new ItemStack(Items.BLUE_CONCRETE,count);}
        if(Objects.equals(name, "brown_concrete")){return new ItemStack(Items.BROWN_CONCRETE,count);}
        if(Objects.equals(name, "green_concrete")){return new ItemStack(Items.GREEN_CONCRETE,count);}
        if(Objects.equals(name, "red_concrete")){return new ItemStack(Items.RED_CONCRETE,count);}
        if(Objects.equals(name, "black_concrete")){return new ItemStack(Items.BLACK_CONCRETE,count);}
        if(Objects.equals(name, "white_concrete_powder")){return new ItemStack(Items.WHITE_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "orange_concrete_powder")){return new ItemStack(Items.ORANGE_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "magenta_concrete_powder")){return new ItemStack(Items.MAGENTA_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "light_blue_concrete_powder")){return new ItemStack(Items.LIGHT_BLUE_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "yellow_concrete_powder")){return new ItemStack(Items.YELLOW_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "lime_concrete_powder")){return new ItemStack(Items.LIME_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "pink_concrete_powder")){return new ItemStack(Items.PINK_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "gray_concrete_powder")){return new ItemStack(Items.GRAY_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "light_gray_concrete_powder")){return new ItemStack(Items.LIGHT_GRAY_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "cyan_concrete_powder")){return new ItemStack(Items.CYAN_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "purple_concrete_powder")){return new ItemStack(Items.PURPLE_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "blue_concrete_powder")){return new ItemStack(Items.BLUE_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "brown_concrete_powder")){return new ItemStack(Items.BROWN_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "green_concrete_powder")){return new ItemStack(Items.GREEN_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "red_concrete_powder")){return new ItemStack(Items.RED_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "black_concrete_powder")){return new ItemStack(Items.BLACK_CONCRETE_POWDER,count);}
        if(Objects.equals(name, "turtle_egg")){return new ItemStack(Items.TURTLE_EGG,count);}
        if(Objects.equals(name, "dead_tube_coral_block")){return new ItemStack(Items.DEAD_TUBE_CORAL_BLOCK,count);}
        if(Objects.equals(name, "dead_brain_coral_block")){return new ItemStack(Items.DEAD_BRAIN_CORAL_BLOCK,count);}
        if(Objects.equals(name, "dead_bubble_coral_block")){return new ItemStack(Items.DEAD_BUBBLE_CORAL_BLOCK,count);}
        if(Objects.equals(name, "dead_fire_coral_block")){return new ItemStack(Items.DEAD_FIRE_CORAL_BLOCK,count);}
        if(Objects.equals(name, "dead_horn_coral_block")){return new ItemStack(Items.DEAD_HORN_CORAL_BLOCK,count);}
        if(Objects.equals(name, "tube_coral_block")){return new ItemStack(Items.TUBE_CORAL_BLOCK,count);}
        if(Objects.equals(name, "brain_coral_block")){return new ItemStack(Items.BRAIN_CORAL_BLOCK,count);}
        if(Objects.equals(name, "bubble_coral_block")){return new ItemStack(Items.BUBBLE_CORAL_BLOCK,count);}
        if(Objects.equals(name, "fire_coral_block")){return new ItemStack(Items.FIRE_CORAL_BLOCK,count);}
        if(Objects.equals(name, "horn_coral_block")){return new ItemStack(Items.HORN_CORAL_BLOCK,count);}
        if(Objects.equals(name, "tube_coral")){return new ItemStack(Items.TUBE_CORAL,count);}
        if(Objects.equals(name, "brain_coral")){return new ItemStack(Items.BRAIN_CORAL,count);}
        if(Objects.equals(name, "bubble_coral")){return new ItemStack(Items.BUBBLE_CORAL,count);}
        if(Objects.equals(name, "fire_coral")){return new ItemStack(Items.FIRE_CORAL,count);}
        if(Objects.equals(name, "horn_coral")){return new ItemStack(Items.HORN_CORAL,count);}
        if(Objects.equals(name, "dead_brain_coral")){return new ItemStack(Items.DEAD_BRAIN_CORAL,count);}
        if(Objects.equals(name, "dead_bubble_coral")){return new ItemStack(Items.DEAD_BUBBLE_CORAL,count);}
        if(Objects.equals(name, "dead_fire_coral")){return new ItemStack(Items.DEAD_FIRE_CORAL,count);}
        if(Objects.equals(name, "dead_horn_coral")){return new ItemStack(Items.DEAD_HORN_CORAL,count);}
        if(Objects.equals(name, "dead_tube_coral")){return new ItemStack(Items.DEAD_TUBE_CORAL,count);}
        if(Objects.equals(name, "tube_coral_fan")){return new ItemStack(Items.TUBE_CORAL_FAN,count);}
        if(Objects.equals(name, "brain_coral_fan")){return new ItemStack(Items.BRAIN_CORAL_FAN,count);}
        if(Objects.equals(name, "bubble_coral_fan")){return new ItemStack(Items.BUBBLE_CORAL_FAN,count);}
        if(Objects.equals(name, "fire_coral_fan")){return new ItemStack(Items.FIRE_CORAL_FAN,count);}
        if(Objects.equals(name, "horn_coral_fan")){return new ItemStack(Items.HORN_CORAL_FAN,count);}
        if(Objects.equals(name, "dead_tube_coral_fan")){return new ItemStack(Items.DEAD_TUBE_CORAL_FAN,count);}
        if(Objects.equals(name, "dead_brain_coral_fan")){return new ItemStack(Items.DEAD_BRAIN_CORAL_FAN,count);}
        if(Objects.equals(name, "dead_bubble_coral_fan")){return new ItemStack(Items.DEAD_BUBBLE_CORAL_FAN,count);}
        if(Objects.equals(name, "dead_fire_coral_fan")){return new ItemStack(Items.DEAD_FIRE_CORAL_FAN,count);}
        if(Objects.equals(name, "dead_horn_coral_fan")){return new ItemStack(Items.DEAD_HORN_CORAL_FAN,count);}
        if(Objects.equals(name, "blue_ice")){return new ItemStack(Items.BLUE_ICE,count);}
        if(Objects.equals(name, "conduit")){return new ItemStack(Items.CONDUIT,count);}
        if(Objects.equals(name, "polished_granite_stairs")){return new ItemStack(Items.POLISHED_GRANITE_STAIRS,count);}
        if(Objects.equals(name, "smooth_red_sandstone_stairs")){return new ItemStack(Items.SMOOTH_RED_SANDSTONE_STAIRS,count);}
        if(Objects.equals(name, "mossy_stone_brick_stairs")){return new ItemStack(Items.MOSSY_STONE_BRICK_STAIRS,count);}
        if(Objects.equals(name, "polished_diorite_stairs")){return new ItemStack(Items.POLISHED_DIORITE_STAIRS,count);}
        if(Objects.equals(name, "mossy_cobblestone_stairs")){return new ItemStack(Items.MOSSY_COBBLESTONE_STAIRS,count);}
        if(Objects.equals(name, "end_stone_brick_stairs")){return new ItemStack(Items.END_STONE_BRICK_STAIRS,count);}
        if(Objects.equals(name, "stone_stairs")){return new ItemStack(Items.STONE_STAIRS,count);}
        if(Objects.equals(name, "smooth_sandstone_stairs")){return new ItemStack(Items.SMOOTH_SANDSTONE_STAIRS,count);}
        if(Objects.equals(name, "smooth_quartz_stairs")){return new ItemStack(Items.SMOOTH_QUARTZ_STAIRS,count);}
        if(Objects.equals(name, "granite_stairs")){return new ItemStack(Items.GRANITE_STAIRS,count);}
        if(Objects.equals(name, "andesite_stairs")){return new ItemStack(Items.ANDESITE_STAIRS,count);}
        if(Objects.equals(name, "red_nether_brick_stairs")){return new ItemStack(Items.RED_NETHER_BRICK_STAIRS,count);}
        if(Objects.equals(name, "polished_andesite_stairs")){return new ItemStack(Items.POLISHED_ANDESITE_STAIRS,count);}
        if(Objects.equals(name, "diorite_stairs")){return new ItemStack(Items.DIORITE_STAIRS,count);}
        if(Objects.equals(name, "cobbled_deepslate_stairs")){return new ItemStack(Items.COBBLED_DEEPSLATE_STAIRS,count);}
        if(Objects.equals(name, "polished_deepslate_stairs")){return new ItemStack(Items.POLISHED_DEEPSLATE_STAIRS,count);}
        if(Objects.equals(name, "deepslate_brick_stairs")){return new ItemStack(Items.DEEPSLATE_BRICK_STAIRS,count);}
        if(Objects.equals(name, "deepslate_tile_stairs")){return new ItemStack(Items.DEEPSLATE_TILE_STAIRS,count);}
        if(Objects.equals(name, "polished_granite_slab")){return new ItemStack(Items.POLISHED_GRANITE_SLAB,count);}
        if(Objects.equals(name, "smooth_red_sandstone_slab")){return new ItemStack(Items.SMOOTH_RED_SANDSTONE_SLAB,count);}
        if(Objects.equals(name, "mossy_stone_brick_slab")){return new ItemStack(Items.MOSSY_STONE_BRICK_SLAB,count);}
        if(Objects.equals(name, "polished_diorite_slab")){return new ItemStack(Items.POLISHED_DIORITE_SLAB,count);}
        if(Objects.equals(name, "mossy_cobblestone_slab")){return new ItemStack(Items.MOSSY_COBBLESTONE_SLAB,count);}
        if(Objects.equals(name, "end_stone_brick_slab")){return new ItemStack(Items.END_STONE_BRICK_SLAB,count);}
        if(Objects.equals(name, "smooth_sandstone_slab")){return new ItemStack(Items.SMOOTH_SANDSTONE_SLAB,count);}
        if(Objects.equals(name, "smooth_quartz_slab")){return new ItemStack(Items.SMOOTH_QUARTZ_SLAB,count);}
        if(Objects.equals(name, "granite_slab")){return new ItemStack(Items.GRANITE_SLAB,count);}
        if(Objects.equals(name, "andesite_slab")){return new ItemStack(Items.ANDESITE_SLAB,count);}
        if(Objects.equals(name, "red_nether_brick_slab")){return new ItemStack(Items.RED_NETHER_BRICK_SLAB,count);}
        if(Objects.equals(name, "polished_andesite_slab")){return new ItemStack(Items.POLISHED_ANDESITE_SLAB,count);}
        if(Objects.equals(name, "diorite_slab")){return new ItemStack(Items.DIORITE_SLAB,count);}
        if(Objects.equals(name, "cobbled_deepslate_slab")){return new ItemStack(Items.COBBLED_DEEPSLATE_SLAB,count);}
        if(Objects.equals(name, "polished_deepslate_slab")){return new ItemStack(Items.POLISHED_DEEPSLATE_SLAB,count);}
        if(Objects.equals(name, "deepslate_brick_slab")){return new ItemStack(Items.DEEPSLATE_BRICK_SLAB,count);}
        if(Objects.equals(name, "deepslate_tile_slab")){return new ItemStack(Items.DEEPSLATE_TILE_SLAB,count);}
        if(Objects.equals(name, "scaffolding")){return new ItemStack(Items.SCAFFOLDING,count);}
        if(Objects.equals(name, "redstone")){return new ItemStack(Items.REDSTONE,count);}
        if(Objects.equals(name, "redstone_torch")){return new ItemStack(Items.REDSTONE_TORCH,count);}
        if(Objects.equals(name, "redstone_block")){return new ItemStack(Items.REDSTONE_BLOCK,count);}
        if(Objects.equals(name, "repeater")){return new ItemStack(Items.REPEATER,count);}
        if(Objects.equals(name, "comparator")){return new ItemStack(Items.COMPARATOR,count);}
        if(Objects.equals(name, "piston")){return new ItemStack(Items.PISTON,count);}
        if(Objects.equals(name, "sticky_piston")){return new ItemStack(Items.STICKY_PISTON,count);}
        if(Objects.equals(name, "slime_block")){return new ItemStack(Items.SLIME_BLOCK,count);}
        if(Objects.equals(name, "honey_block")){return new ItemStack(Items.HONEY_BLOCK,count);}
        if(Objects.equals(name, "observer")){return new ItemStack(Items.OBSERVER,count);}
        if(Objects.equals(name, "hopper")){return new ItemStack(Items.HOPPER,count);}
        if(Objects.equals(name, "dispenser")){return new ItemStack(Items.DISPENSER,count);}
        if(Objects.equals(name, "dropper")){return new ItemStack(Items.DROPPER,count);}
        if(Objects.equals(name, "lectern")){return new ItemStack(Items.LECTERN,count);}
        if(Objects.equals(name, "target")){return new ItemStack(Items.TARGET,count);}
        if(Objects.equals(name, "lever")){return new ItemStack(Items.LEVER,count);}
        if(Objects.equals(name, "lightning_rod")){return new ItemStack(Items.LIGHTNING_ROD,count);}
        if(Objects.equals(name, "daylight_detector")){return new ItemStack(Items.DAYLIGHT_DETECTOR,count);}
        if(Objects.equals(name, "sculk_sensor")){return new ItemStack(Items.SCULK_SENSOR,count);}
        if(Objects.equals(name, "tripwire_hook")){return new ItemStack(Items.TRIPWIRE_HOOK,count);}
        if(Objects.equals(name, "trapped_chest")){return new ItemStack(Items.TRAPPED_CHEST,count);}
        if(Objects.equals(name, "tnt")){return new ItemStack(Items.TNT,count);}
        if(Objects.equals(name, "redstone_lamp")){return new ItemStack(Items.REDSTONE_LAMP,count);}
        if(Objects.equals(name, "note_block")){return new ItemStack(Items.NOTE_BLOCK,count);}
        if(Objects.equals(name, "stone_button")){return new ItemStack(Items.STONE_BUTTON,count);}
        if(Objects.equals(name, "polished_blackstone_button")){return new ItemStack(Items.POLISHED_BLACKSTONE_BUTTON,count);}
        if(Objects.equals(name, "oak_button")){return new ItemStack(Items.OAK_BUTTON,count);}
        if(Objects.equals(name, "spruce_button")){return new ItemStack(Items.SPRUCE_BUTTON,count);}
        if(Objects.equals(name, "birch_button")){return new ItemStack(Items.BIRCH_BUTTON,count);}
        if(Objects.equals(name, "jungle_button")){return new ItemStack(Items.JUNGLE_BUTTON,count);}
        if(Objects.equals(name, "acacia_button")){return new ItemStack(Items.ACACIA_BUTTON,count);}
        if(Objects.equals(name, "cherry_button")){return new ItemStack(Items.CHERRY_BUTTON,count);}
        if(Objects.equals(name, "dark_oak_button")){return new ItemStack(Items.DARK_OAK_BUTTON,count);}
        if(Objects.equals(name, "mangrove_button")){return new ItemStack(Items.MANGROVE_BUTTON,count);}
        if(Objects.equals(name, "bamboo_button")){return new ItemStack(Items.BAMBOO_BUTTON,count);}
        if(Objects.equals(name, "crimson_button")){return new ItemStack(Items.CRIMSON_BUTTON,count);}
        if(Objects.equals(name, "warped_button")){return new ItemStack(Items.WARPED_BUTTON,count);}
        if(Objects.equals(name, "stone_pressure_plate")){return new ItemStack(Items.STONE_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "polished_blackstone_pressure_plate")){return new ItemStack(Items.POLISHED_BLACKSTONE_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "light_weighted_pressure_plate")){return new ItemStack(Items.LIGHT_WEIGHTED_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "heavy_weighted_pressure_plate")){return new ItemStack(Items.HEAVY_WEIGHTED_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "oak_pressure_plate")){return new ItemStack(Items.OAK_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "spruce_pressure_plate")){return new ItemStack(Items.SPRUCE_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "birch_pressure_plate")){return new ItemStack(Items.BIRCH_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "jungle_pressure_plate")){return new ItemStack(Items.JUNGLE_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "acacia_pressure_plate")){return new ItemStack(Items.ACACIA_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "cherry_pressure_plate")){return new ItemStack(Items.CHERRY_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "dark_oak_pressure_plate")){return new ItemStack(Items.DARK_OAK_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "mangrove_pressure_plate")){return new ItemStack(Items.MANGROVE_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "bamboo_pressure_plate")){return new ItemStack(Items.BAMBOO_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "crimson_pressure_plate")){return new ItemStack(Items.CRIMSON_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "warped_pressure_plate")){return new ItemStack(Items.WARPED_PRESSURE_PLATE,count);}
        if(Objects.equals(name, "iron_door")){return new ItemStack(Items.IRON_DOOR,count);}
        if(Objects.equals(name, "oak_door")){return new ItemStack(Items.OAK_DOOR,count);}
        if(Objects.equals(name, "spruce_door")){return new ItemStack(Items.SPRUCE_DOOR,count);}
        if(Objects.equals(name, "birch_door")){return new ItemStack(Items.BIRCH_DOOR,count);}
        if(Objects.equals(name, "jungle_door")){return new ItemStack(Items.JUNGLE_DOOR,count);}
        if(Objects.equals(name, "acacia_door")){return new ItemStack(Items.ACACIA_DOOR,count);}
        if(Objects.equals(name, "cherry_door")){return new ItemStack(Items.CHERRY_DOOR,count);}
        if(Objects.equals(name, "dark_oak_door")){return new ItemStack(Items.DARK_OAK_DOOR,count);}
        if(Objects.equals(name, "mangrove_door")){return new ItemStack(Items.MANGROVE_DOOR,count);}
        if(Objects.equals(name, "bamboo_door")){return new ItemStack(Items.BAMBOO_DOOR,count);}
        if(Objects.equals(name, "crimson_door")){return new ItemStack(Items.CRIMSON_DOOR,count);}
        if(Objects.equals(name, "warped_door")){return new ItemStack(Items.WARPED_DOOR,count);}
        if(Objects.equals(name, "iron_trapdoor")){return new ItemStack(Items.IRON_TRAPDOOR,count);}
        if(Objects.equals(name, "oak_trapdoor")){return new ItemStack(Items.OAK_TRAPDOOR,count);}
        if(Objects.equals(name, "spruce_trapdoor")){return new ItemStack(Items.SPRUCE_TRAPDOOR,count);}
        if(Objects.equals(name, "birch_trapdoor")){return new ItemStack(Items.BIRCH_TRAPDOOR,count);}
        if(Objects.equals(name, "jungle_trapdoor")){return new ItemStack(Items.JUNGLE_TRAPDOOR,count);}
        if(Objects.equals(name, "acacia_trapdoor")){return new ItemStack(Items.ACACIA_TRAPDOOR,count);}
        if(Objects.equals(name, "cherry_trapdoor")){return new ItemStack(Items.CHERRY_TRAPDOOR,count);}
        if(Objects.equals(name, "dark_oak_trapdoor")){return new ItemStack(Items.DARK_OAK_TRAPDOOR,count);}
        if(Objects.equals(name, "mangrove_trapdoor")){return new ItemStack(Items.MANGROVE_TRAPDOOR,count);}
        if(Objects.equals(name, "bamboo_trapdoor")){return new ItemStack(Items.BAMBOO_TRAPDOOR,count);}
        if(Objects.equals(name, "crimson_trapdoor")){return new ItemStack(Items.CRIMSON_TRAPDOOR,count);}
        if(Objects.equals(name, "warped_trapdoor")){return new ItemStack(Items.WARPED_TRAPDOOR,count);}
        if(Objects.equals(name, "oak_fence_gate")){return new ItemStack(Items.OAK_FENCE_GATE,count);}
        if(Objects.equals(name, "spruce_fence_gate")){return new ItemStack(Items.SPRUCE_FENCE_GATE,count);}
        if(Objects.equals(name, "birch_fence_gate")){return new ItemStack(Items.BIRCH_FENCE_GATE,count);}
        if(Objects.equals(name, "jungle_fence_gate")){return new ItemStack(Items.JUNGLE_FENCE_GATE,count);}
        if(Objects.equals(name, "acacia_fence_gate")){return new ItemStack(Items.ACACIA_FENCE_GATE,count);}
        if(Objects.equals(name, "cherry_fence_gate")){return new ItemStack(Items.CHERRY_FENCE_GATE,count);}
        if(Objects.equals(name, "dark_oak_fence_gate")){return new ItemStack(Items.DARK_OAK_FENCE_GATE,count);}
        if(Objects.equals(name, "mangrove_fence_gate")){return new ItemStack(Items.MANGROVE_FENCE_GATE,count);}
        if(Objects.equals(name, "bamboo_fence_gate")){return new ItemStack(Items.BAMBOO_FENCE_GATE,count);}
        if(Objects.equals(name, "crimson_fence_gate")){return new ItemStack(Items.CRIMSON_FENCE_GATE,count);}
        if(Objects.equals(name, "warped_fence_gate")){return new ItemStack(Items.WARPED_FENCE_GATE,count);}
        if(Objects.equals(name, "powered_rail")){return new ItemStack(Items.POWERED_RAIL,count);}
        if(Objects.equals(name, "detector_rail")){return new ItemStack(Items.DETECTOR_RAIL,count);}
        if(Objects.equals(name, "rail")){return new ItemStack(Items.RAIL,count);}
        if(Objects.equals(name, "activator_rail")){return new ItemStack(Items.ACTIVATOR_RAIL,count);}
        if(Objects.equals(name, "saddle")){return new ItemStack(Items.SADDLE,count);}
        if(Objects.equals(name, "minecart")){return new ItemStack(Items.MINECART,count);}
        if(Objects.equals(name, "chest_minecart")){return new ItemStack(Items.CHEST_MINECART,count);}
        if(Objects.equals(name, "furnace_minecart")){return new ItemStack(Items.FURNACE_MINECART,count);}
        if(Objects.equals(name, "tnt_minecart")){return new ItemStack(Items.TNT_MINECART,count);}
        if(Objects.equals(name, "hopper_minecart")){return new ItemStack(Items.HOPPER_MINECART,count);}
        if(Objects.equals(name, "carrot_on_a_stick")){return new ItemStack(Items.CARROT_ON_A_STICK,count);}
        if(Objects.equals(name, "warped_fungus_on_a_stick")){return new ItemStack(Items.WARPED_FUNGUS_ON_A_STICK,count);}
        if(Objects.equals(name, "elytra")){return new ItemStack(Items.ELYTRA,count);}
        if(Objects.equals(name, "oak_boat")){return new ItemStack(Items.OAK_BOAT,count);}
        if(Objects.equals(name, "oak_chest_boat")){return new ItemStack(Items.OAK_CHEST_BOAT,count);}
        if(Objects.equals(name, "spruce_boat")){return new ItemStack(Items.SPRUCE_BOAT,count);}
        if(Objects.equals(name, "spruce_chest_boat")){return new ItemStack(Items.SPRUCE_CHEST_BOAT,count);}
        if(Objects.equals(name, "birch_boat")){return new ItemStack(Items.BIRCH_BOAT,count);}
        if(Objects.equals(name, "birch_chest_boat")){return new ItemStack(Items.BIRCH_CHEST_BOAT,count);}
        if(Objects.equals(name, "jungle_boat")){return new ItemStack(Items.JUNGLE_BOAT,count);}
        if(Objects.equals(name, "jungle_chest_boat")){return new ItemStack(Items.JUNGLE_CHEST_BOAT,count);}
        if(Objects.equals(name, "acacia_boat")){return new ItemStack(Items.ACACIA_BOAT,count);}
        if(Objects.equals(name, "acacia_chest_boat")){return new ItemStack(Items.ACACIA_CHEST_BOAT,count);}
        if(Objects.equals(name, "cherry_boat")){return new ItemStack(Items.CHERRY_BOAT,count);}
        if(Objects.equals(name, "cherry_chest_boat")){return new ItemStack(Items.CHERRY_CHEST_BOAT,count);}
        if(Objects.equals(name, "dark_oak_boat")){return new ItemStack(Items.DARK_OAK_BOAT,count);}
        if(Objects.equals(name, "dark_oak_chest_boat")){return new ItemStack(Items.DARK_OAK_CHEST_BOAT,count);}
        if(Objects.equals(name, "mangrove_boat")){return new ItemStack(Items.MANGROVE_BOAT,count);}
        if(Objects.equals(name, "mangrove_chest_boat")){return new ItemStack(Items.MANGROVE_CHEST_BOAT,count);}
        if(Objects.equals(name, "bamboo_raft")){return new ItemStack(Items.BAMBOO_RAFT,count);}
        if(Objects.equals(name, "bamboo_chest_raft")){return new ItemStack(Items.BAMBOO_CHEST_RAFT,count);}
        if(Objects.equals(name, "structure_block")){return new ItemStack(Items.STRUCTURE_BLOCK,count);}
        if(Objects.equals(name, "jigsaw")){return new ItemStack(Items.JIGSAW,count);}
        if(Objects.equals(name, "turtle_helmet")){return new ItemStack(Items.TURTLE_HELMET,count);}
        if(Objects.equals(name, "scute")){return new ItemStack(Items.SCUTE,count);}
        if(Objects.equals(name, "flint_and_steel")){return new ItemStack(Items.FLINT_AND_STEEL,count);}
        if(Objects.equals(name, "apple")){return new ItemStack(Items.APPLE,count);}
        if(Objects.equals(name, "bow")){return new ItemStack(Items.BOW,count);}
        if(Objects.equals(name, "arrow")){return new ItemStack(Items.ARROW,count);}
        if(Objects.equals(name, "coal")){return new ItemStack(Items.COAL,count);}
        if(Objects.equals(name, "charcoal")){return new ItemStack(Items.CHARCOAL,count);}
        if(Objects.equals(name, "diamond")){return new ItemStack(Items.DIAMOND,count);}
        if(Objects.equals(name, "emerald")){return new ItemStack(Items.EMERALD,count);}
        if(Objects.equals(name, "lapis_lazuli")){return new ItemStack(Items.LAPIS_LAZULI,count);}
        if(Objects.equals(name, "quartz")){return new ItemStack(Items.QUARTZ,count);}
        if(Objects.equals(name, "amethyst_shard")){return new ItemStack(Items.AMETHYST_SHARD,count);}
        if(Objects.equals(name, "raw_iron")){return new ItemStack(Items.RAW_IRON,count);}
        if(Objects.equals(name, "iron_ingot")){return new ItemStack(Items.IRON_INGOT,count);}
        if(Objects.equals(name, "raw_copper")){return new ItemStack(Items.RAW_COPPER,count);}
        if(Objects.equals(name, "copper_ingot")){return new ItemStack(Items.COPPER_INGOT,count);}
        if(Objects.equals(name, "raw_gold")){return new ItemStack(Items.RAW_GOLD,count);}
        if(Objects.equals(name, "gold_ingot")){return new ItemStack(Items.GOLD_INGOT,count);}
        if(Objects.equals(name, "netherite_ingot")){return new ItemStack(Items.NETHERITE_INGOT,count);}
        if(Objects.equals(name, "netherite_scrap")){return new ItemStack(Items.NETHERITE_SCRAP,count);}
        if(Objects.equals(name, "wooden_sword")){return new ItemStack(Items.WOODEN_SWORD,count);}
        if(Objects.equals(name, "wooden_shovel")){return new ItemStack(Items.WOODEN_SHOVEL,count);}
        if(Objects.equals(name, "wooden_pickaxe")){return new ItemStack(Items.WOODEN_PICKAXE,count);}
        if(Objects.equals(name, "wooden_axe")){return new ItemStack(Items.WOODEN_AXE,count);}
        if(Objects.equals(name, "wooden_hoe")){return new ItemStack(Items.WOODEN_HOE,count);}
        if(Objects.equals(name, "stone_sword")){return new ItemStack(Items.STONE_SWORD,count);}
        if(Objects.equals(name, "stone_shovel")){return new ItemStack(Items.STONE_SHOVEL,count);}
        if(Objects.equals(name, "stone_pickaxe")){return new ItemStack(Items.STONE_PICKAXE,count);}
        if(Objects.equals(name, "stone_axe")){return new ItemStack(Items.STONE_AXE,count);}
        if(Objects.equals(name, "stone_hoe")){return new ItemStack(Items.STONE_HOE,count);}
        if(Objects.equals(name, "golden_sword")){return new ItemStack(Items.GOLDEN_SWORD,count);}
        if(Objects.equals(name, "golden_shovel")){return new ItemStack(Items.GOLDEN_SHOVEL,count);}
        if(Objects.equals(name, "golden_pickaxe")){return new ItemStack(Items.GOLDEN_PICKAXE,count);}
        if(Objects.equals(name, "golden_axe")){return new ItemStack(Items.GOLDEN_AXE,count);}
        if(Objects.equals(name, "golden_hoe")){return new ItemStack(Items.GOLDEN_HOE,count);}
        if(Objects.equals(name, "iron_sword")){return new ItemStack(Items.IRON_SWORD,count);}
        if(Objects.equals(name, "iron_shovel")){return new ItemStack(Items.IRON_SHOVEL,count);}
        if(Objects.equals(name, "iron_pickaxe")){return new ItemStack(Items.IRON_PICKAXE,count);}
        if(Objects.equals(name, "iron_axe")){return new ItemStack(Items.IRON_AXE,count);}
        if(Objects.equals(name, "iron_hoe")){return new ItemStack(Items.IRON_HOE,count);}
        if(Objects.equals(name, "diamond_sword")){return new ItemStack(Items.DIAMOND_SWORD,count);}
        if(Objects.equals(name, "diamond_shovel")){return new ItemStack(Items.DIAMOND_SHOVEL,count);}
        if(Objects.equals(name, "diamond_pickaxe")){return new ItemStack(Items.DIAMOND_PICKAXE,count);}
        if(Objects.equals(name, "diamond_axe")){return new ItemStack(Items.DIAMOND_AXE,count);}
        if(Objects.equals(name, "diamond_hoe")){return new ItemStack(Items.DIAMOND_HOE,count);}
        if(Objects.equals(name, "netherite_sword")){return new ItemStack(Items.NETHERITE_SWORD,count);}
        if(Objects.equals(name, "netherite_shovel")){return new ItemStack(Items.NETHERITE_SHOVEL,count);}
        if(Objects.equals(name, "netherite_pickaxe")){return new ItemStack(Items.NETHERITE_PICKAXE,count);}
        if(Objects.equals(name, "netherite_axe")){return new ItemStack(Items.NETHERITE_AXE,count);}
        if(Objects.equals(name, "netherite_hoe")){return new ItemStack(Items.NETHERITE_HOE,count);}
        if(Objects.equals(name, "stick")){return new ItemStack(Items.STICK,count);}
        if(Objects.equals(name, "bowl")){return new ItemStack(Items.BOWL,count);}
        if(Objects.equals(name, "mushroom_stew")){return new ItemStack(Items.MUSHROOM_STEW,count);}
        if(Objects.equals(name, "string")){return new ItemStack(Items.STRING,count);}
        if(Objects.equals(name, "feather")){return new ItemStack(Items.FEATHER,count);}
        if(Objects.equals(name, "gunpowder")){return new ItemStack(Items.GUNPOWDER,count);}
        if(Objects.equals(name, "wheat_seeds")){return new ItemStack(Items.WHEAT_SEEDS,count);}
        if(Objects.equals(name, "wheat")){return new ItemStack(Items.WHEAT,count);}
        if(Objects.equals(name, "bread")){return new ItemStack(Items.BREAD,count);}
        if(Objects.equals(name, "leather_helmet")){return new ItemStack(Items.LEATHER_HELMET,count);}
        if(Objects.equals(name, "leather_chestplate")){return new ItemStack(Items.LEATHER_CHESTPLATE,count);}
        if(Objects.equals(name, "leather_leggings")){return new ItemStack(Items.LEATHER_LEGGINGS,count);}
        if(Objects.equals(name, "leather_boots")){return new ItemStack(Items.LEATHER_BOOTS,count);}
        if(Objects.equals(name, "chainmail_helmet")){return new ItemStack(Items.CHAINMAIL_HELMET,count);}
        if(Objects.equals(name, "chainmail_chestplate")){return new ItemStack(Items.CHAINMAIL_CHESTPLATE,count);}
        if(Objects.equals(name, "chainmail_leggings")){return new ItemStack(Items.CHAINMAIL_LEGGINGS,count);}
        if(Objects.equals(name, "chainmail_boots")){return new ItemStack(Items.CHAINMAIL_BOOTS,count);}
        if(Objects.equals(name, "iron_helmet")){return new ItemStack(Items.IRON_HELMET,count);}
        if(Objects.equals(name, "iron_chestplate")){return new ItemStack(Items.IRON_CHESTPLATE,count);}
        if(Objects.equals(name, "iron_leggings")){return new ItemStack(Items.IRON_LEGGINGS,count);}
        if(Objects.equals(name, "iron_boots")){return new ItemStack(Items.IRON_BOOTS,count);}
        if(Objects.equals(name, "diamond_helmet")){return new ItemStack(Items.DIAMOND_HELMET,count);}
        if(Objects.equals(name, "diamond_chestplate")){return new ItemStack(Items.DIAMOND_CHESTPLATE,count);}
        if(Objects.equals(name, "diamond_leggings")){return new ItemStack(Items.DIAMOND_LEGGINGS,count);}
        if(Objects.equals(name, "diamond_boots")){return new ItemStack(Items.DIAMOND_BOOTS,count);}
        if(Objects.equals(name, "golden_helmet")){return new ItemStack(Items.GOLDEN_HELMET,count);}
        if(Objects.equals(name, "golden_chestplate")){return new ItemStack(Items.GOLDEN_CHESTPLATE,count);}
        if(Objects.equals(name, "golden_leggings")){return new ItemStack(Items.GOLDEN_LEGGINGS,count);}
        if(Objects.equals(name, "golden_boots")){return new ItemStack(Items.GOLDEN_BOOTS,count);}
        if(Objects.equals(name, "netherite_helmet")){return new ItemStack(Items.NETHERITE_HELMET,count);}
        if(Objects.equals(name, "netherite_chestplate")){return new ItemStack(Items.NETHERITE_CHESTPLATE,count);}
        if(Objects.equals(name, "netherite_leggings")){return new ItemStack(Items.NETHERITE_LEGGINGS,count);}
        if(Objects.equals(name, "netherite_boots")){return new ItemStack(Items.NETHERITE_BOOTS,count);}
        if(Objects.equals(name, "flint")){return new ItemStack(Items.FLINT,count);}
        if(Objects.equals(name, "porkchop")){return new ItemStack(Items.PORKCHOP,count);}
        if(Objects.equals(name, "cooked_porkchop")){return new ItemStack(Items.COOKED_PORKCHOP,count);}
        if(Objects.equals(name, "painting")){return new ItemStack(Items.PAINTING,count);}
        if(Objects.equals(name, "golden_apple")){return new ItemStack(Items.GOLDEN_APPLE,count);}
        if(Objects.equals(name, "enchanted_golden_apple")){return new ItemStack(Items.ENCHANTED_GOLDEN_APPLE,count);}
        if(Objects.equals(name, "oak_sign")){return new ItemStack(Items.OAK_SIGN,count);}
        if(Objects.equals(name, "spruce_sign")){return new ItemStack(Items.SPRUCE_SIGN,count);}
        if(Objects.equals(name, "birch_sign")){return new ItemStack(Items.BIRCH_SIGN,count);}
        if(Objects.equals(name, "jungle_sign")){return new ItemStack(Items.JUNGLE_SIGN,count);}
        if(Objects.equals(name, "acacia_sign")){return new ItemStack(Items.ACACIA_SIGN,count);}
        if(Objects.equals(name, "cherry_sign")){return new ItemStack(Items.CHERRY_SIGN,count);}
        if(Objects.equals(name, "dark_oak_sign")){return new ItemStack(Items.DARK_OAK_SIGN,count);}
        if(Objects.equals(name, "mangrove_sign")){return new ItemStack(Items.MANGROVE_SIGN,count);}
        if(Objects.equals(name, "bamboo_sign")){return new ItemStack(Items.BAMBOO_SIGN,count);}
        if(Objects.equals(name, "crimson_sign")){return new ItemStack(Items.CRIMSON_SIGN,count);}
        if(Objects.equals(name, "warped_sign")){return new ItemStack(Items.WARPED_SIGN,count);}
        if(Objects.equals(name, "oak_hanging_sign")){return new ItemStack(Items.OAK_HANGING_SIGN,count);}
        if(Objects.equals(name, "spruce_hanging_sign")){return new ItemStack(Items.SPRUCE_HANGING_SIGN,count);}
        if(Objects.equals(name, "birch_hanging_sign")){return new ItemStack(Items.BIRCH_HANGING_SIGN,count);}
        if(Objects.equals(name, "jungle_hanging_sign")){return new ItemStack(Items.JUNGLE_HANGING_SIGN,count);}
        if(Objects.equals(name, "acacia_hanging_sign")){return new ItemStack(Items.ACACIA_HANGING_SIGN,count);}
        if(Objects.equals(name, "cherry_hanging_sign")){return new ItemStack(Items.CHERRY_HANGING_SIGN,count);}
        if(Objects.equals(name, "dark_oak_hanging_sign")){return new ItemStack(Items.DARK_OAK_HANGING_SIGN,count);}
        if(Objects.equals(name, "mangrove_hanging_sign")){return new ItemStack(Items.MANGROVE_HANGING_SIGN,count);}
        if(Objects.equals(name, "bamboo_hanging_sign")){return new ItemStack(Items.BAMBOO_HANGING_SIGN,count);}
        if(Objects.equals(name, "crimson_hanging_sign")){return new ItemStack(Items.CRIMSON_HANGING_SIGN,count);}
        if(Objects.equals(name, "warped_hanging_sign")){return new ItemStack(Items.WARPED_HANGING_SIGN,count);}
        if(Objects.equals(name, "bucket")){return new ItemStack(Items.BUCKET,count);}
        if(Objects.equals(name, "water_bucket")){return new ItemStack(Items.WATER_BUCKET,count);}
        if(Objects.equals(name, "lava_bucket")){return new ItemStack(Items.LAVA_BUCKET,count);}
        if(Objects.equals(name, "powder_snow_bucket")){return new ItemStack(Items.POWDER_SNOW_BUCKET,count);}
        if(Objects.equals(name, "snowball")){return new ItemStack(Items.SNOWBALL,count);}
        if(Objects.equals(name, "leather")){return new ItemStack(Items.LEATHER,count);}
        if(Objects.equals(name, "milk_bucket")){return new ItemStack(Items.MILK_BUCKET,count);}
        if(Objects.equals(name, "pufferfish_bucket")){return new ItemStack(Items.PUFFERFISH_BUCKET,count);}
        if(Objects.equals(name, "salmon_bucket")){return new ItemStack(Items.SALMON_BUCKET,count);}
        if(Objects.equals(name, "cod_bucket")){return new ItemStack(Items.COD_BUCKET,count);}
        if(Objects.equals(name, "tropical_fish_bucket")){return new ItemStack(Items.TROPICAL_FISH_BUCKET,count);}
        if(Objects.equals(name, "axolotl_bucket")){return new ItemStack(Items.AXOLOTL_BUCKET,count);}
        if(Objects.equals(name, "tadpole_bucket")){return new ItemStack(Items.TADPOLE_BUCKET,count);}
        if(Objects.equals(name, "brick")){return new ItemStack(Items.BRICK,count);}
        if(Objects.equals(name, "clay_ball")){return new ItemStack(Items.CLAY_BALL,count);}
        if(Objects.equals(name, "dried_kelp_block")){return new ItemStack(Items.DRIED_KELP_BLOCK,count);}
        if(Objects.equals(name, "paper")){return new ItemStack(Items.PAPER,count);}
        if(Objects.equals(name, "book")){return new ItemStack(Items.BOOK,count);}
        if(Objects.equals(name, "slime_ball")){return new ItemStack(Items.SLIME_BALL,count);}
        if(Objects.equals(name, "egg")){return new ItemStack(Items.EGG,count);}
        if(Objects.equals(name, "compass")){return new ItemStack(Items.COMPASS,count);}
        if(Objects.equals(name, "recovery_compass")){return new ItemStack(Items.RECOVERY_COMPASS,count);}
        if(Objects.equals(name, "bundle")){return new ItemStack(Items.BUNDLE,count);}
        if(Objects.equals(name, "fishing_rod")){return new ItemStack(Items.FISHING_ROD,count);}
        if(Objects.equals(name, "clock")){return new ItemStack(Items.CLOCK,count);}
        if(Objects.equals(name, "spyglass")){return new ItemStack(Items.SPYGLASS,count);}
        if(Objects.equals(name, "glowstone_dust")){return new ItemStack(Items.GLOWSTONE_DUST,count);}
        if(Objects.equals(name, "cod")){return new ItemStack(Items.COD,count);}
        if(Objects.equals(name, "salmon")){return new ItemStack(Items.SALMON,count);}
        if(Objects.equals(name, "tropical_fish")){return new ItemStack(Items.TROPICAL_FISH,count);}
        if(Objects.equals(name, "pufferfish")){return new ItemStack(Items.PUFFERFISH,count);}
        if(Objects.equals(name, "cooked_cod")){return new ItemStack(Items.COOKED_COD,count);}
        if(Objects.equals(name, "cooked_salmon")){return new ItemStack(Items.COOKED_SALMON,count);}
        if(Objects.equals(name, "ink_sac")){return new ItemStack(Items.INK_SAC,count);}
        if(Objects.equals(name, "glow_ink_sac")){return new ItemStack(Items.GLOW_INK_SAC,count);}
        if(Objects.equals(name, "cocoa_beans")){return new ItemStack(Items.COCOA_BEANS,count);}
        if(Objects.equals(name, "white_dye")){return new ItemStack(Items.WHITE_DYE,count);}
        if(Objects.equals(name, "orange_dye")){return new ItemStack(Items.ORANGE_DYE,count);}
        if(Objects.equals(name, "magenta_dye")){return new ItemStack(Items.MAGENTA_DYE,count);}
        if(Objects.equals(name, "light_blue_dye")){return new ItemStack(Items.LIGHT_BLUE_DYE,count);}
        if(Objects.equals(name, "yellow_dye")){return new ItemStack(Items.YELLOW_DYE,count);}
        if(Objects.equals(name, "lime_dye")){return new ItemStack(Items.LIME_DYE,count);}
        if(Objects.equals(name, "pink_dye")){return new ItemStack(Items.PINK_DYE,count);}
        if(Objects.equals(name, "gray_dye")){return new ItemStack(Items.GRAY_DYE,count);}
        if(Objects.equals(name, "light_gray_dye")){return new ItemStack(Items.LIGHT_GRAY_DYE,count);}
        if(Objects.equals(name, "cyan_dye")){return new ItemStack(Items.CYAN_DYE,count);}
        if(Objects.equals(name, "purple_dye")){return new ItemStack(Items.PURPLE_DYE,count);}
        if(Objects.equals(name, "blue_dye")){return new ItemStack(Items.BLUE_DYE,count);}
        if(Objects.equals(name, "brown_dye")){return new ItemStack(Items.BROWN_DYE,count);}
        if(Objects.equals(name, "green_dye")){return new ItemStack(Items.GREEN_DYE,count);}
        if(Objects.equals(name, "red_dye")){return new ItemStack(Items.RED_DYE,count);}
        if(Objects.equals(name, "black_dye")){return new ItemStack(Items.BLACK_DYE,count);}
        if(Objects.equals(name, "bone_meal")){return new ItemStack(Items.BONE_MEAL,count);}
        if(Objects.equals(name, "bone")){return new ItemStack(Items.BONE,count);}
        if(Objects.equals(name, "sugar")){return new ItemStack(Items.SUGAR,count);}
        if(Objects.equals(name, "cake")){return new ItemStack(Items.CAKE,count);}
        if(Objects.equals(name, "white_bed")){return new ItemStack(Items.WHITE_BED,count);}
        if(Objects.equals(name, "orange_bed")){return new ItemStack(Items.ORANGE_BED,count);}
        if(Objects.equals(name, "magenta_bed")){return new ItemStack(Items.MAGENTA_BED,count);}
        if(Objects.equals(name, "light_blue_bed")){return new ItemStack(Items.LIGHT_BLUE_BED,count);}
        if(Objects.equals(name, "yellow_bed")){return new ItemStack(Items.YELLOW_BED,count);}
        if(Objects.equals(name, "lime_bed")){return new ItemStack(Items.LIME_BED,count);}
        if(Objects.equals(name, "pink_bed")){return new ItemStack(Items.PINK_BED,count);}
        if(Objects.equals(name, "gray_bed")){return new ItemStack(Items.GRAY_BED,count);}
        if(Objects.equals(name, "light_gray_bed")){return new ItemStack(Items.LIGHT_GRAY_BED,count);}
        if(Objects.equals(name, "cyan_bed")){return new ItemStack(Items.CYAN_BED,count);}
        if(Objects.equals(name, "purple_bed")){return new ItemStack(Items.PURPLE_BED,count);}
        if(Objects.equals(name, "blue_bed")){return new ItemStack(Items.BLUE_BED,count);}
        if(Objects.equals(name, "brown_bed")){return new ItemStack(Items.BROWN_BED,count);}
        if(Objects.equals(name, "green_bed")){return new ItemStack(Items.GREEN_BED,count);}
        if(Objects.equals(name, "red_bed")){return new ItemStack(Items.RED_BED,count);}
        if(Objects.equals(name, "black_bed")){return new ItemStack(Items.BLACK_BED,count);}
        if(Objects.equals(name, "cookie")){return new ItemStack(Items.COOKIE,count);}
        if(Objects.equals(name, "filled_map")){return new ItemStack(Items.FILLED_MAP,count);}
        if(Objects.equals(name, "shears")){return new ItemStack(Items.SHEARS,count);}
        if(Objects.equals(name, "melon_slice")){return new ItemStack(Items.MELON_SLICE,count);}
        if(Objects.equals(name, "dried_kelp")){return new ItemStack(Items.DRIED_KELP,count);}
        if(Objects.equals(name, "pumpkin_seeds")){return new ItemStack(Items.PUMPKIN_SEEDS,count);}
        if(Objects.equals(name, "melon_seeds")){return new ItemStack(Items.MELON_SEEDS,count);}
        if(Objects.equals(name, "beef")){return new ItemStack(Items.BEEF,count);}
        if(Objects.equals(name, "cooked_beef")){return new ItemStack(Items.COOKED_BEEF,count);}
        if(Objects.equals(name, "chicken")){return new ItemStack(Items.CHICKEN,count);}
        if(Objects.equals(name, "cooked_chicken")){return new ItemStack(Items.COOKED_CHICKEN,count);}
        if(Objects.equals(name, "rotten_flesh")){return new ItemStack(Items.ROTTEN_FLESH,count);}
        if(Objects.equals(name, "ender_pearl")){return new ItemStack(Items.ENDER_PEARL,count);}
        if(Objects.equals(name, "blaze_rod")){return new ItemStack(Items.BLAZE_ROD,count);}
        if(Objects.equals(name, "ghast_tear")){return new ItemStack(Items.GHAST_TEAR,count);}
        if(Objects.equals(name, "gold_nugget")){return new ItemStack(Items.GOLD_NUGGET,count);}
        if(Objects.equals(name, "nether_wart")){return new ItemStack(Items.NETHER_WART,count);}
        if(Objects.equals(name, "potion")){return new ItemStack(Items.POTION,count);}
        if(Objects.equals(name, "glass_bottle")){return new ItemStack(Items.GLASS_BOTTLE,count);}
        if(Objects.equals(name, "spider_eye")){return new ItemStack(Items.SPIDER_EYE,count);}
        if(Objects.equals(name, "fermented_spider_eye")){return new ItemStack(Items.FERMENTED_SPIDER_EYE,count);}
        if(Objects.equals(name, "blaze_powder")){return new ItemStack(Items.BLAZE_POWDER,count);}
        if(Objects.equals(name, "magma_cream")){return new ItemStack(Items.MAGMA_CREAM,count);}
        if(Objects.equals(name, "brewing_stand")){return new ItemStack(Items.BREWING_STAND,count);}
        if(Objects.equals(name, "cauldron")){return new ItemStack(Items.CAULDRON,count);}
        if(Objects.equals(name, "ender_eye")){return new ItemStack(Items.ENDER_EYE,count);}
        if(Objects.equals(name, "glistering_melon_slice")){return new ItemStack(Items.GLISTERING_MELON_SLICE,count);}
        if(Objects.equals(name, "allay_spawn_egg")){return new ItemStack(Items.ALLAY_SPAWN_EGG,count);}
        if(Objects.equals(name, "axolotl_spawn_egg")){return new ItemStack(Items.AXOLOTL_SPAWN_EGG,count);}
        if(Objects.equals(name, "bat_spawn_egg")){return new ItemStack(Items.BAT_SPAWN_EGG,count);}
        if(Objects.equals(name, "bee_spawn_egg")){return new ItemStack(Items.BEE_SPAWN_EGG,count);}
        if(Objects.equals(name, "blaze_spawn_egg")){return new ItemStack(Items.BLAZE_SPAWN_EGG,count);}
        if(Objects.equals(name, "cat_spawn_egg")){return new ItemStack(Items.CAT_SPAWN_EGG,count);}
        if(Objects.equals(name, "camel_spawn_egg")){return new ItemStack(Items.CAMEL_SPAWN_EGG,count);}
        if(Objects.equals(name, "cave_spider_spawn_egg")){return new ItemStack(Items.CAVE_SPIDER_SPAWN_EGG,count);}
        if(Objects.equals(name, "chicken_spawn_egg")){return new ItemStack(Items.CHICKEN_SPAWN_EGG,count);}
        if(Objects.equals(name, "cod_spawn_egg")){return new ItemStack(Items.COD_SPAWN_EGG,count);}
        if(Objects.equals(name, "cow_spawn_egg")){return new ItemStack(Items.COW_SPAWN_EGG,count);}
        if(Objects.equals(name, "creeper_spawn_egg")){return new ItemStack(Items.CREEPER_SPAWN_EGG,count);}
        if(Objects.equals(name, "dolphin_spawn_egg")){return new ItemStack(Items.DOLPHIN_SPAWN_EGG,count);}
        if(Objects.equals(name, "donkey_spawn_egg")){return new ItemStack(Items.DONKEY_SPAWN_EGG,count);}
        if(Objects.equals(name, "drowned_spawn_egg")){return new ItemStack(Items.DROWNED_SPAWN_EGG,count);}
        if(Objects.equals(name, "elder_guardian_spawn_egg")){return new ItemStack(Items.ELDER_GUARDIAN_SPAWN_EGG,count);}
        if(Objects.equals(name, "ender_dragon_spawn_egg")){return new ItemStack(Items.ENDER_DRAGON_SPAWN_EGG,count);}
        if(Objects.equals(name, "enderman_spawn_egg")){return new ItemStack(Items.ENDERMAN_SPAWN_EGG,count);}
        if(Objects.equals(name, "endermite_spawn_egg")){return new ItemStack(Items.ENDERMITE_SPAWN_EGG,count);}
        if(Objects.equals(name, "evoker_spawn_egg")){return new ItemStack(Items.EVOKER_SPAWN_EGG,count);}
        if(Objects.equals(name, "fox_spawn_egg")){return new ItemStack(Items.FOX_SPAWN_EGG,count);}
        if(Objects.equals(name, "frog_spawn_egg")){return new ItemStack(Items.FROG_SPAWN_EGG,count);}
        if(Objects.equals(name, "ghast_spawn_egg")){return new ItemStack(Items.GHAST_SPAWN_EGG,count);}
        if(Objects.equals(name, "glow_squid_spawn_egg")){return new ItemStack(Items.GLOW_SQUID_SPAWN_EGG,count);}
        if(Objects.equals(name, "goat_spawn_egg")){return new ItemStack(Items.GOAT_SPAWN_EGG,count);}
        if(Objects.equals(name, "guardian_spawn_egg")){return new ItemStack(Items.GUARDIAN_SPAWN_EGG,count);}
        if(Objects.equals(name, "hoglin_spawn_egg")){return new ItemStack(Items.HOGLIN_SPAWN_EGG,count);}
        if(Objects.equals(name, "horse_spawn_egg")){return new ItemStack(Items.HORSE_SPAWN_EGG,count);}
        if(Objects.equals(name, "husk_spawn_egg")){return new ItemStack(Items.HUSK_SPAWN_EGG,count);}
        if(Objects.equals(name, "iron_golem_spawn_egg")){return new ItemStack(Items.IRON_GOLEM_SPAWN_EGG,count);}
        if(Objects.equals(name, "llama_spawn_egg")){return new ItemStack(Items.LLAMA_SPAWN_EGG,count);}
        if(Objects.equals(name, "magma_cube_spawn_egg")){return new ItemStack(Items.MAGMA_CUBE_SPAWN_EGG,count);}
        if(Objects.equals(name, "mooshroom_spawn_egg")){return new ItemStack(Items.MOOSHROOM_SPAWN_EGG,count);}
        if(Objects.equals(name, "mule_spawn_egg")){return new ItemStack(Items.MULE_SPAWN_EGG,count);}
        if(Objects.equals(name, "ocelot_spawn_egg")){return new ItemStack(Items.OCELOT_SPAWN_EGG,count);}
        if(Objects.equals(name, "panda_spawn_egg")){return new ItemStack(Items.PANDA_SPAWN_EGG,count);}
        if(Objects.equals(name, "parrot_spawn_egg")){return new ItemStack(Items.PARROT_SPAWN_EGG,count);}
        if(Objects.equals(name, "phantom_spawn_egg")){return new ItemStack(Items.PHANTOM_SPAWN_EGG,count);}
        if(Objects.equals(name, "pig_spawn_egg")){return new ItemStack(Items.PIG_SPAWN_EGG,count);}
        if(Objects.equals(name, "piglin_spawn_egg")){return new ItemStack(Items.PIGLIN_SPAWN_EGG,count);}
        if(Objects.equals(name, "piglin_brute_spawn_egg")){return new ItemStack(Items.PIGLIN_BRUTE_SPAWN_EGG,count);}
        if(Objects.equals(name, "pillager_spawn_egg")){return new ItemStack(Items.PILLAGER_SPAWN_EGG,count);}
        if(Objects.equals(name, "polar_bear_spawn_egg")){return new ItemStack(Items.POLAR_BEAR_SPAWN_EGG,count);}
        if(Objects.equals(name, "pufferfish_spawn_egg")){return new ItemStack(Items.PUFFERFISH_SPAWN_EGG,count);}
        if(Objects.equals(name, "rabbit_spawn_egg")){return new ItemStack(Items.RABBIT_SPAWN_EGG,count);}
        if(Objects.equals(name, "ravager_spawn_egg")){return new ItemStack(Items.RAVAGER_SPAWN_EGG,count);}
        if(Objects.equals(name, "salmon_spawn_egg")){return new ItemStack(Items.SALMON_SPAWN_EGG,count);}
        if(Objects.equals(name, "sheep_spawn_egg")){return new ItemStack(Items.SHEEP_SPAWN_EGG,count);}
        if(Objects.equals(name, "shulker_spawn_egg")){return new ItemStack(Items.SHULKER_SPAWN_EGG,count);}
        if(Objects.equals(name, "silverfish_spawn_egg")){return new ItemStack(Items.SILVERFISH_SPAWN_EGG,count);}
        if(Objects.equals(name, "skeleton_spawn_egg")){return new ItemStack(Items.SKELETON_SPAWN_EGG,count);}
        if(Objects.equals(name, "skeleton_horse_spawn_egg")){return new ItemStack(Items.SKELETON_HORSE_SPAWN_EGG,count);}
        if(Objects.equals(name, "slime_spawn_egg")){return new ItemStack(Items.SLIME_SPAWN_EGG,count);}
        if(Objects.equals(name, "sniffer_spawn_egg")){return new ItemStack(Items.SNIFFER_SPAWN_EGG,count);}
        if(Objects.equals(name, "snow_golem_spawn_egg")){return new ItemStack(Items.SNOW_GOLEM_SPAWN_EGG,count);}
        if(Objects.equals(name, "spider_spawn_egg")){return new ItemStack(Items.SPIDER_SPAWN_EGG,count);}
        if(Objects.equals(name, "squid_spawn_egg")){return new ItemStack(Items.SQUID_SPAWN_EGG,count);}
        if(Objects.equals(name, "stray_spawn_egg")){return new ItemStack(Items.STRAY_SPAWN_EGG,count);}
        if(Objects.equals(name, "strider_spawn_egg")){return new ItemStack(Items.STRIDER_SPAWN_EGG,count);}
        if(Objects.equals(name, "tadpole_spawn_egg")){return new ItemStack(Items.TADPOLE_SPAWN_EGG,count);}
        if(Objects.equals(name, "trader_llama_spawn_egg")){return new ItemStack(Items.TRADER_LLAMA_SPAWN_EGG,count);}
        if(Objects.equals(name, "tropical_fish_spawn_egg")){return new ItemStack(Items.TROPICAL_FISH_SPAWN_EGG,count);}
        if(Objects.equals(name, "turtle_spawn_egg")){return new ItemStack(Items.TURTLE_SPAWN_EGG,count);}
        if(Objects.equals(name, "vex_spawn_egg")){return new ItemStack(Items.VEX_SPAWN_EGG,count);}
        if(Objects.equals(name, "villager_spawn_egg")){return new ItemStack(Items.VILLAGER_SPAWN_EGG,count);}
        if(Objects.equals(name, "vindicator_spawn_egg")){return new ItemStack(Items.VINDICATOR_SPAWN_EGG,count);}
        if(Objects.equals(name, "wandering_trader_spawn_egg")){return new ItemStack(Items.WANDERING_TRADER_SPAWN_EGG,count);}
        if(Objects.equals(name, "warden_spawn_egg")){return new ItemStack(Items.WARDEN_SPAWN_EGG,count);}
        if(Objects.equals(name, "witch_spawn_egg")){return new ItemStack(Items.WITCH_SPAWN_EGG,count);}
        if(Objects.equals(name, "wither_spawn_egg")){return new ItemStack(Items.WITHER_SPAWN_EGG,count);}
        if(Objects.equals(name, "wither_skeleton_spawn_egg")){return new ItemStack(Items.WITHER_SKELETON_SPAWN_EGG,count);}
        if(Objects.equals(name, "wolf_spawn_egg")){return new ItemStack(Items.WOLF_SPAWN_EGG,count);}
        if(Objects.equals(name, "zoglin_spawn_egg")){return new ItemStack(Items.ZOGLIN_SPAWN_EGG,count);}
        if(Objects.equals(name, "zombie_spawn_egg")){return new ItemStack(Items.ZOMBIE_SPAWN_EGG,count);}
        if(Objects.equals(name, "zombie_horse_spawn_egg")){return new ItemStack(Items.ZOMBIE_HORSE_SPAWN_EGG,count);}
        if(Objects.equals(name, "zombie_villager_spawn_egg")){return new ItemStack(Items.ZOMBIE_VILLAGER_SPAWN_EGG,count);}
        if(Objects.equals(name, "zombified_piglin_spawn_egg")){return new ItemStack(Items.ZOMBIFIED_PIGLIN_SPAWN_EGG,count);}
        if(Objects.equals(name, "experience_bottle")){return new ItemStack(Items.EXPERIENCE_BOTTLE,count);}
        if(Objects.equals(name, "fire_charge")){return new ItemStack(Items.FIRE_CHARGE,count);}
        if(Objects.equals(name, "writable_book")){return new ItemStack(Items.WRITABLE_BOOK,count);}
        if(Objects.equals(name, "written_book")){return new ItemStack(Items.WRITTEN_BOOK,count);}
        if(Objects.equals(name, "item_frame")){return new ItemStack(Items.ITEM_FRAME,count);}
        if(Objects.equals(name, "glow_item_frame")){return new ItemStack(Items.GLOW_ITEM_FRAME,count);}
        if(Objects.equals(name, "flower_pot")){return new ItemStack(Items.FLOWER_POT,count);}
        if(Objects.equals(name, "carrot")){return new ItemStack(Items.CARROT,count);}
        if(Objects.equals(name, "potato")){return new ItemStack(Items.POTATO,count);}
        if(Objects.equals(name, "baked_potato")){return new ItemStack(Items.BAKED_POTATO,count);}
        if(Objects.equals(name, "poisonous_potato")){return new ItemStack(Items.POISONOUS_POTATO,count);}
        if(Objects.equals(name, "map")){return new ItemStack(Items.MAP,count);}
        if(Objects.equals(name, "golden_carrot")){return new ItemStack(Items.GOLDEN_CARROT,count);}
        if(Objects.equals(name, "skeleton_skull")){return new ItemStack(Items.SKELETON_SKULL,count);}
        if(Objects.equals(name, "wither_skeleton_skull")){return new ItemStack(Items.WITHER_SKELETON_SKULL,count);}
        if(Objects.equals(name, "player_head")){return new ItemStack(Items.PLAYER_HEAD,count);}
        if(Objects.equals(name, "zombie_head")){return new ItemStack(Items.ZOMBIE_HEAD,count);}
        if(Objects.equals(name, "creeper_head")){return new ItemStack(Items.CREEPER_HEAD,count);}
        if(Objects.equals(name, "dragon_head")){return new ItemStack(Items.DRAGON_HEAD,count);}
        if(Objects.equals(name, "piglin_head")){return new ItemStack(Items.PIGLIN_HEAD,count);}
        if(Objects.equals(name, "nether_star")){return new ItemStack(Items.NETHER_STAR,count);}
        if(Objects.equals(name, "pumpkin_pie")){return new ItemStack(Items.PUMPKIN_PIE,count);}
        if(Objects.equals(name, "firework_rocket")){return new ItemStack(Items.FIREWORK_ROCKET,count);}
        if(Objects.equals(name, "firework_star")){return new ItemStack(Items.FIREWORK_STAR,count);}
        if(Objects.equals(name, "enchanted_book")){return new ItemStack(Items.ENCHANTED_BOOK,count);}
        if(Objects.equals(name, "nether_brick")){return new ItemStack(Items.NETHER_BRICK,count);}
        if(Objects.equals(name, "prismarine_shard")){return new ItemStack(Items.PRISMARINE_SHARD,count);}
        if(Objects.equals(name, "prismarine_crystals")){return new ItemStack(Items.PRISMARINE_CRYSTALS,count);}
        if(Objects.equals(name, "rabbit")){return new ItemStack(Items.RABBIT,count);}
        if(Objects.equals(name, "cooked_rabbit")){return new ItemStack(Items.COOKED_RABBIT,count);}
        if(Objects.equals(name, "rabbit_stew")){return new ItemStack(Items.RABBIT_STEW,count);}
        if(Objects.equals(name, "rabbit_foot")){return new ItemStack(Items.RABBIT_FOOT,count);}
        if(Objects.equals(name, "rabbit_hide")){return new ItemStack(Items.RABBIT_HIDE,count);}
        if(Objects.equals(name, "armor_stand")){return new ItemStack(Items.ARMOR_STAND,count);}
        if(Objects.equals(name, "iron_horse_armor")){return new ItemStack(Items.IRON_HORSE_ARMOR,count);}
        if(Objects.equals(name, "golden_horse_armor")){return new ItemStack(Items.GOLDEN_HORSE_ARMOR,count);}
        if(Objects.equals(name, "diamond_horse_armor")){return new ItemStack(Items.DIAMOND_HORSE_ARMOR,count);}
        if(Objects.equals(name, "leather_horse_armor")){return new ItemStack(Items.LEATHER_HORSE_ARMOR,count);}
        if(Objects.equals(name, "lead")){return new ItemStack(Items.LEAD,count);}
        if(Objects.equals(name, "name_tag")){return new ItemStack(Items.NAME_TAG,count);}
        if(Objects.equals(name, "command_block_minecart")){return new ItemStack(Items.COMMAND_BLOCK_MINECART,count);}
        if(Objects.equals(name, "mutton")){return new ItemStack(Items.MUTTON,count);}
        if(Objects.equals(name, "cooked_mutton")){return new ItemStack(Items.COOKED_MUTTON,count);}
        if(Objects.equals(name, "white_banner")){return new ItemStack(Items.WHITE_BANNER,count);}
        if(Objects.equals(name, "orange_banner")){return new ItemStack(Items.ORANGE_BANNER,count);}
        if(Objects.equals(name, "magenta_banner")){return new ItemStack(Items.MAGENTA_BANNER,count);}
        if(Objects.equals(name, "light_blue_banner")){return new ItemStack(Items.LIGHT_BLUE_BANNER,count);}
        if(Objects.equals(name, "yellow_banner")){return new ItemStack(Items.YELLOW_BANNER,count);}
        if(Objects.equals(name, "lime_banner")){return new ItemStack(Items.LIME_BANNER,count);}
        if(Objects.equals(name, "pink_banner")){return new ItemStack(Items.PINK_BANNER,count);}
        if(Objects.equals(name, "gray_banner")){return new ItemStack(Items.GRAY_BANNER,count);}
        if(Objects.equals(name, "light_gray_banner")){return new ItemStack(Items.LIGHT_GRAY_BANNER,count);}
        if(Objects.equals(name, "cyan_banner")){return new ItemStack(Items.CYAN_BANNER,count);}
        if(Objects.equals(name, "purple_banner")){return new ItemStack(Items.PURPLE_BANNER,count);}
        if(Objects.equals(name, "blue_banner")){return new ItemStack(Items.BLUE_BANNER,count);}
        if(Objects.equals(name, "brown_banner")){return new ItemStack(Items.BROWN_BANNER,count);}
        if(Objects.equals(name, "green_banner")){return new ItemStack(Items.GREEN_BANNER,count);}
        if(Objects.equals(name, "red_banner")){return new ItemStack(Items.RED_BANNER,count);}
        if(Objects.equals(name, "black_banner")){return new ItemStack(Items.BLACK_BANNER,count);}
        if(Objects.equals(name, "end_crystal")){return new ItemStack(Items.END_CRYSTAL,count);}
        if(Objects.equals(name, "chorus_fruit")){return new ItemStack(Items.CHORUS_FRUIT,count);}
        if(Objects.equals(name, "popped_chorus_fruit")){return new ItemStack(Items.POPPED_CHORUS_FRUIT,count);}
        if(Objects.equals(name, "torchflower_seeds")){return new ItemStack(Items.TORCHFLOWER_SEEDS,count);}
        if(Objects.equals(name, "beetroot")){return new ItemStack(Items.BEETROOT,count);}
        if(Objects.equals(name, "beetroot_seeds")){return new ItemStack(Items.BEETROOT_SEEDS,count);}
        if(Objects.equals(name, "beetroot_soup")){return new ItemStack(Items.BEETROOT_SOUP,count);}
        if(Objects.equals(name, "dragon_breath")){return new ItemStack(Items.DRAGON_BREATH,count);}
        if(Objects.equals(name, "splash_potion")){return new ItemStack(Items.SPLASH_POTION,count);}
        if(Objects.equals(name, "spectral_arrow")){return new ItemStack(Items.SPECTRAL_ARROW,count);}
        if(Objects.equals(name, "tipped_arrow")){return new ItemStack(Items.TIPPED_ARROW,count);}
        if(Objects.equals(name, "lingering_potion")){return new ItemStack(Items.LINGERING_POTION,count);}
        if(Objects.equals(name, "shield")){return new ItemStack(Items.SHIELD,count);}
        if(Objects.equals(name, "totem_of_undying")){return new ItemStack(Items.TOTEM_OF_UNDYING,count);}
        if(Objects.equals(name, "shulker_shell")){return new ItemStack(Items.SHULKER_SHELL,count);}
        if(Objects.equals(name, "iron_nugget")){return new ItemStack(Items.IRON_NUGGET,count);}
        if(Objects.equals(name, "knowledge_book")){return new ItemStack(Items.KNOWLEDGE_BOOK,count);}
        if(Objects.equals(name, "debug_stick")){return new ItemStack(Items.DEBUG_STICK,count);}
        if(Objects.equals(name, "music_disc_13")){return new ItemStack(Items.MUSIC_DISC_13,count);}
        if(Objects.equals(name, "music_disc_cat")){return new ItemStack(Items.MUSIC_DISC_CAT,count);}
        if(Objects.equals(name, "music_disc_blocks")){return new ItemStack(Items.MUSIC_DISC_BLOCKS,count);}
        if(Objects.equals(name, "music_disc_chirp")){return new ItemStack(Items.MUSIC_DISC_CHIRP,count);}
        if(Objects.equals(name, "music_disc_far")){return new ItemStack(Items.MUSIC_DISC_FAR,count);}
        if(Objects.equals(name, "music_disc_mall")){return new ItemStack(Items.MUSIC_DISC_MALL,count);}
        if(Objects.equals(name, "music_disc_mellohi")){return new ItemStack(Items.MUSIC_DISC_MELLOHI,count);}
        if(Objects.equals(name, "music_disc_stal")){return new ItemStack(Items.MUSIC_DISC_STAL,count);}
        if(Objects.equals(name, "music_disc_strad")){return new ItemStack(Items.MUSIC_DISC_STRAD,count);}
        if(Objects.equals(name, "music_disc_ward")){return new ItemStack(Items.MUSIC_DISC_WARD,count);}
        if(Objects.equals(name, "music_disc_11")){return new ItemStack(Items.MUSIC_DISC_11,count);}
        if(Objects.equals(name, "music_disc_wait")){return new ItemStack(Items.MUSIC_DISC_WAIT,count);}
        if(Objects.equals(name, "music_disc_otherside")){return new ItemStack(Items.MUSIC_DISC_OTHERSIDE,count);}
        if(Objects.equals(name, "music_disc_5")){return new ItemStack(Items.MUSIC_DISC_5,count);}
        if(Objects.equals(name, "music_disc_pigstep")){return new ItemStack(Items.MUSIC_DISC_PIGSTEP,count);}
        if(Objects.equals(name, "disc_fragment_5")){return new ItemStack(Items.DISC_FRAGMENT_5,count);}
        if(Objects.equals(name, "trident")){return new ItemStack(Items.TRIDENT,count);}
        if(Objects.equals(name, "phantom_membrane")){return new ItemStack(Items.PHANTOM_MEMBRANE,count);}
        if(Objects.equals(name, "nautilus_shell")){return new ItemStack(Items.NAUTILUS_SHELL,count);}
        if(Objects.equals(name, "heart_of_the_sea")){return new ItemStack(Items.HEART_OF_THE_SEA,count);}
        if(Objects.equals(name, "crossbow")){return new ItemStack(Items.CROSSBOW,count);}
        if(Objects.equals(name, "suspicious_stew")){return new ItemStack(Items.SUSPICIOUS_STEW,count);}
        if(Objects.equals(name, "loom")){return new ItemStack(Items.LOOM,count);}
        if(Objects.equals(name, "flower_banner_pattern")){return new ItemStack(Items.FLOWER_BANNER_PATTERN,count);}
        if(Objects.equals(name, "creeper_banner_pattern")){return new ItemStack(Items.CREEPER_BANNER_PATTERN,count);}
        if(Objects.equals(name, "skull_banner_pattern")){return new ItemStack(Items.SKULL_BANNER_PATTERN,count);}
        if(Objects.equals(name, "mojang_banner_pattern")){return new ItemStack(Items.MOJANG_BANNER_PATTERN,count);}
        if(Objects.equals(name, "globe_banner_pattern")){return new ItemStack(Items.GLOBE_BANNER_PATTERN,count);}
        if(Objects.equals(name, "piglin_banner_pattern")){return new ItemStack(Items.PIGLIN_BANNER_PATTERN,count);}
        if(Objects.equals(name, "goat_horn")){return new ItemStack(Items.GOAT_HORN,count);}
        if(Objects.equals(name, "composter")){return new ItemStack(Items.COMPOSTER,count);}
        if(Objects.equals(name, "barrel")){return new ItemStack(Items.BARREL,count);}
        if(Objects.equals(name, "smoker")){return new ItemStack(Items.SMOKER,count);}
        if(Objects.equals(name, "blast_furnace")){return new ItemStack(Items.BLAST_FURNACE,count);}
        if(Objects.equals(name, "cartography_table")){return new ItemStack(Items.CARTOGRAPHY_TABLE,count);}
        if(Objects.equals(name, "fletching_table")){return new ItemStack(Items.FLETCHING_TABLE,count);}
        if(Objects.equals(name, "grindstone")){return new ItemStack(Items.GRINDSTONE,count);}
        if(Objects.equals(name, "smithing_table")){return new ItemStack(Items.SMITHING_TABLE,count);}
        if(Objects.equals(name, "stonecutter")){return new ItemStack(Items.STONECUTTER,count);}
        if(Objects.equals(name, "bell")){return new ItemStack(Items.BELL,count);}
        if(Objects.equals(name, "lantern")){return new ItemStack(Items.LANTERN,count);}
        if(Objects.equals(name, "soul_lantern")){return new ItemStack(Items.SOUL_LANTERN,count);}
        if(Objects.equals(name, "sweet_berries")){return new ItemStack(Items.SWEET_BERRIES,count);}
        if(Objects.equals(name, "glow_berries")){return new ItemStack(Items.GLOW_BERRIES,count);}
        if(Objects.equals(name, "campfire")){return new ItemStack(Items.CAMPFIRE,count);}
        if(Objects.equals(name, "soul_campfire")){return new ItemStack(Items.SOUL_CAMPFIRE,count);}
        if(Objects.equals(name, "shroomlight")){return new ItemStack(Items.SHROOMLIGHT,count);}
        if(Objects.equals(name, "honeycomb")){return new ItemStack(Items.HONEYCOMB,count);}
        if(Objects.equals(name, "bee_nest")){return new ItemStack(Items.BEE_NEST,count);}
        if(Objects.equals(name, "beehive")){return new ItemStack(Items.BEEHIVE,count);}
        if(Objects.equals(name, "honey_bottle")){return new ItemStack(Items.HONEY_BOTTLE,count);}
        if(Objects.equals(name, "honeycomb_block")){return new ItemStack(Items.HONEYCOMB_BLOCK,count);}
        if(Objects.equals(name, "lodestone")){return new ItemStack(Items.LODESTONE,count);}
        if(Objects.equals(name, "crying_obsidian")){return new ItemStack(Items.CRYING_OBSIDIAN,count);}
        if(Objects.equals(name, "blackstone")){return new ItemStack(Items.BLACKSTONE,count);}
        if(Objects.equals(name, "blackstone_slab")){return new ItemStack(Items.BLACKSTONE_SLAB,count);}
        if(Objects.equals(name, "blackstone_stairs")){return new ItemStack(Items.BLACKSTONE_STAIRS,count);}
        if(Objects.equals(name, "gilded_blackstone")){return new ItemStack(Items.GILDED_BLACKSTONE,count);}
        if(Objects.equals(name, "polished_blackstone")){return new ItemStack(Items.POLISHED_BLACKSTONE,count);}
        if(Objects.equals(name, "polished_blackstone_slab")){return new ItemStack(Items.POLISHED_BLACKSTONE_SLAB,count);}
        if(Objects.equals(name, "polished_blackstone_stairs")){return new ItemStack(Items.POLISHED_BLACKSTONE_STAIRS,count);}
        if(Objects.equals(name, "chiseled_polished_blackstone")){return new ItemStack(Items.CHISELED_POLISHED_BLACKSTONE,count);}
        if(Objects.equals(name, "polished_blackstone_bricks")){return new ItemStack(Items.POLISHED_BLACKSTONE_BRICKS,count);}
        if(Objects.equals(name, "polished_blackstone_brick_slab")){return new ItemStack(Items.POLISHED_BLACKSTONE_BRICK_SLAB,count);}
        if(Objects.equals(name, "polished_blackstone_brick_stairs")){return new ItemStack(Items.POLISHED_BLACKSTONE_BRICK_STAIRS,count);}
        if(Objects.equals(name, "cracked_polished_blackstone_bricks")){return new ItemStack(Items.CRACKED_POLISHED_BLACKSTONE_BRICKS,count);}
        if(Objects.equals(name, "respawn_anchor")){return new ItemStack(Items.RESPAWN_ANCHOR,count);}
        if(Objects.equals(name, "candle")){return new ItemStack(Items.CANDLE,count);}
        if(Objects.equals(name, "white_candle")){return new ItemStack(Items.WHITE_CANDLE,count);}
        if(Objects.equals(name, "orange_candle")){return new ItemStack(Items.ORANGE_CANDLE,count);}
        if(Objects.equals(name, "magenta_candle")){return new ItemStack(Items.MAGENTA_CANDLE,count);}
        if(Objects.equals(name, "light_blue_candle")){return new ItemStack(Items.LIGHT_BLUE_CANDLE,count);}
        if(Objects.equals(name, "yellow_candle")){return new ItemStack(Items.YELLOW_CANDLE,count);}
        if(Objects.equals(name, "lime_candle")){return new ItemStack(Items.LIME_CANDLE,count);}
        if(Objects.equals(name, "pink_candle")){return new ItemStack(Items.PINK_CANDLE,count);}
        if(Objects.equals(name, "gray_candle")){return new ItemStack(Items.GRAY_CANDLE,count);}
        if(Objects.equals(name, "light_gray_candle")){return new ItemStack(Items.LIGHT_GRAY_CANDLE,count);}
        if(Objects.equals(name, "cyan_candle")){return new ItemStack(Items.CYAN_CANDLE,count);}
        if(Objects.equals(name, "purple_candle")){return new ItemStack(Items.PURPLE_CANDLE,count);}
        if(Objects.equals(name, "blue_candle")){return new ItemStack(Items.BLUE_CANDLE,count);}
        if(Objects.equals(name, "brown_candle")){return new ItemStack(Items.BROWN_CANDLE,count);}
        if(Objects.equals(name, "green_candle")){return new ItemStack(Items.GREEN_CANDLE,count);}
        if(Objects.equals(name, "red_candle")){return new ItemStack(Items.RED_CANDLE,count);}
        if(Objects.equals(name, "black_candle")){return new ItemStack(Items.BLACK_CANDLE,count);}
        if(Objects.equals(name, "small_amethyst_bud")){return new ItemStack(Items.SMALL_AMETHYST_BUD,count);}
        if(Objects.equals(name, "medium_amethyst_bud")){return new ItemStack(Items.MEDIUM_AMETHYST_BUD,count);}
        if(Objects.equals(name, "large_amethyst_bud")){return new ItemStack(Items.LARGE_AMETHYST_BUD,count);}
        if(Objects.equals(name, "amethyst_cluster")){return new ItemStack(Items.AMETHYST_CLUSTER,count);}
        if(Objects.equals(name, "pointed_dripstone")){return new ItemStack(Items.POINTED_DRIPSTONE,count);}
        if(Objects.equals(name, "ochre_froglight")){return new ItemStack(Items.OCHRE_FROGLIGHT,count);}
        if(Objects.equals(name, "verdant_froglight")){return new ItemStack(Items.VERDANT_FROGLIGHT,count);}
        if(Objects.equals(name, "pearlescent_froglight")){return new ItemStack(Items.PEARLESCENT_FROGLIGHT,count);}
        if(Objects.equals(name, "frogspawn")){return new ItemStack(Items.FROGSPAWN,count);}
        if(Objects.equals(name, "echo_shard")){return new ItemStack(Items.ECHO_SHARD,count);}
        if(Objects.equals(name, "brush")){return new ItemStack(Items.BRUSH,count);}
        if(Objects.equals(name, "netherite_upgrade_smithing_template")){return new ItemStack(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "sentry_armor_trim_smithing_template")){return new ItemStack(Items.SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "dune_armor_trim_smithing_template")){return new ItemStack(Items.DUNE_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "coast_armor_trim_smithing_template")){return new ItemStack(Items.COAST_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "wild_armor_trim_smithing_template")){return new ItemStack(Items.WILD_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "ward_armor_trim_smithing_template")){return new ItemStack(Items.WARD_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "eye_armor_trim_smithing_template")){return new ItemStack(Items.EYE_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "vex_armor_trim_smithing_template")){return new ItemStack(Items.VEX_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "tide_armor_trim_smithing_template")){return new ItemStack(Items.TIDE_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "snout_armor_trim_smithing_template")){return new ItemStack(Items.SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "rib_armor_trim_smithing_template")){return new ItemStack(Items.RIB_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "spire_armor_trim_smithing_template")){return new ItemStack(Items.SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE,count);}
        if(Objects.equals(name, "pottery_shard_archer")){return new ItemStack(Items.POTTERY_SHARD_ARCHER,count);}
        if(Objects.equals(name, "pottery_shard_prize")){return new ItemStack(Items.POTTERY_SHARD_PRIZE,count);}
        if(Objects.equals(name, "pottery_shard_arms_up")){return new ItemStack(Items.POTTERY_SHARD_ARMS_UP,count);}
        return null;
    }
}
